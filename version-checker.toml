[app]
title = "Software version checker"

[[softwares]]
name = "git"
repo = "git/git"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://kernel.org/pub/software/scm/git/git-{version}.tar.gz",
    "https://kernel.org/pub/software/scm/git/git-htmldocs-{version}.tar.gz",
    "https://kernel.org/pub/software/scm/git/git-manpages-{version}.tar.gz",
]

[[softwares]]
name = "git-for-windows"
repo = "git-for-windows/git"
tag_pattern = "^Git for Windows v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.windows\\.(?P<suffix>\\d))$"
ver_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.windows\\.(?P<suffix>\\d))$"
by_release = true
download_urls = [
    "https://github.com/git-for-windows/git/releases/download/v{version}/Git-{major}.{minor}.{patch}.{suffix}-64-bit.exe",
]

[[softwares]]
name = "clash_for_windows_pkg"
repo = "Fndroid/clash_for_windows_pkg"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/Fndroid/clash_for_windows_pkg/releases/download/{version}/Clash.for.Windows-{version}-win.7z",
    "https://github.com/Fndroid/clash_for_windows_pkg/releases/download/{version}/Clash.for.Windows.Setup.{version}.exe",
]

[[softwares]]
name = "clash"
repo = "Dreamacro/clash"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-linux-amd64-v{version}.gz",
    "https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-linux-amd64-v3-v{version}.gz",
    "https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-windows-amd64-v{version}.zip",
    "https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-windows-amd64-v3-v{version}.zip",
]

[[softwares]]
name = "clash-premium"
repo = "Dreamacro/clash"
parser = "gh-releases"
by_tag = "premium"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "ClashForAndroid"
repo = "Kr328/ClashForAndroid"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-foss-arm64-v8a-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-foss-armeabi-v7a-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-foss-universal-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-foss-x86-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-foss-x86_64-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-premium-arm64-v8a-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-premium-armeabi-v7a-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-premium-universal-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-premium-x86-release.apk",
    "https://github.com/Kr328/ClashForAndroid/releases/download/v{version}/cfa-{version}-premium-x86_64-release.apk",
]

[[softwares]]
name = "Clash.Meta"
repo = "MetaCubeX/Clash.Meta"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/MetaCubeX/Clash.Meta/releases/download/v{version}/clash.meta-linux-amd64-v{version}.gz",
    "https://github.com/MetaCubeX/Clash.Meta/releases/download/v{version}/clash.meta-linux-amd64-cgo-v{version}.gz",
    "https://github.com/MetaCubeX/Clash.Meta/releases/download/v{version}/clash.meta-windows-amd64-v{version}.zip",
    "https://github.com/MetaCubeX/Clash.Meta/releases/download/v{version}/clash.meta-windows-amd64-cgo-v{version}.zip",
]

[[softwares]]
name = "compose"
repo = "docker/compose"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/docker/compose/releases/download/v{version}/docker-compose-linux-x86_64",
    "https://github.com/docker/compose/releases/download/v{version}/docker-compose-windows-x86_64.exe",
]

[[softwares]]
name = "graalvm-ce-builds"
repo = "graalvm/graalvm-ce-builds"
tag_pattern = "^vm-ce-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-{version}/graalvm-community-jdk-{version}_linux-x64_bin.tar.gz",
    "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-{version}/graalvm-community-jdk-{version}_windows-x64_bin.zip",
]

[[softwares]]
name = "stonedb"
repo = "stoneatom/stonedb"
tag_pattern = "^5\\.7-v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))-GA$"
download_urls = [
    "https://github.com/stoneatom/stonedb/releases/download/5.7-v{version}-GA/stonedb-ce-5.7-v{version}.el7.x86_64.rpm",
    "https://github.com/stoneatom/stonedb/releases/download/5.7-v{version}-GA/stonedb-ce-5.7_v{version}.ubuntu.amd64.deb",
    "https://github.com/stoneatom/stonedb/releases/download/5.7-v{version}-GA/stonedb-ce-5.7-v{version}.el7.x86_64.tar.gz",
]

[[softwares]]
name = "libmaxminddb"
repo = "maxmind/libmaxminddb"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/maxmind/libmaxminddb/releases/download/{version}/libmaxminddb-{version}.tar.gz",
]

[[softwares]]
name = "geoipupdate"
repo = "maxmind/geoipupdate"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.deb",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.rpm",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.tar.gz",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_windows_amd64.zip",
]

[[softwares]]
name = "zfs"
repo = "openzfs/zfs"
by_release = true
tag_pattern = "^zfs-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/openzfs/zfs/releases/download/zfs-{version}/zfs-{version}.tar.gz",
]

[[softwares]]
name = "upx"
repo = "upx/upx"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-amd64_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-arm64_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-armeb_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-arm_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-dos.zip",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-i386_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-mipsel_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-mips_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-powerpc64le_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-powerpc_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-win32.zip",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-win64.zip",
]

[[softwares]]
name = "curl"
repo = "curl/curl"
tag_pattern = "^curl-(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://curl.se/download/curl-{version}.tar.gz",
    "https://github.com/stunnel/static-curl/releases/download/{version}/curl-static-amd64-{version}.tar.xz",
]

[[softwares]]
name = "libgd"
repo = "libgd/libgd"
tag_pattern = "^gd-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/libgd/libgd/releases/download/gd-{version}/libgd-{version}.tar.gz",
]

[[softwares]]
name = "openssl"
repo = "openssl/openssl"
by_release = true
category = true
tag_pattern = "^OpenSSL (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?P<suffix>[a-z])?)$"
download_urls = [
    "https://www.openssl.org/source/openssl-{version}.tar.gz",
]

[[softwares]]
name = "corretto-8"
repo = "corretto/corretto-8"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+))$"
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-11"
repo = "corretto/corretto-11"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-17"
repo = "corretto/corretto-17"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-21"
repo = "corretto/corretto-21"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "python"
repo = "python/cpython"
category = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.python.org/ftp/python/{version}/Python-{version}.tgz",
    "https://www.python.org/ftp/python/{version}/Python-{version}.tar.xz",
]

[[softwares]]
name = "php"
major = [7, 8]
category = true
parser = "php"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.php.net/distributions/php-{version}.tar.gz",
]

[[softwares]]
name = "go"
category = true
parser = "go"
tag_pattern = "^go(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://go.dev/dl/go{version}.src.tar.gz",
    "https://go.dev/dl/go{version}.linux-amd64.tar.gz",
    "https://go.dev/dl/go{version}.windows-amd64.msi",
    "https://go.dev/dl/go{version}.windows-amd64.msi",
]

[[softwares]]
name = "redis"
repo = "redis/redis"
by_release = true
category = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://download.redis.io/releases/redis-{version}.tar.gz",
]

[[softwares]]
name = "composer"
repo = "composer/composer"
by_release = true
category = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://getcomposer.org/download/{version}/composer.phar",
]

[[softwares]]
name = "httpd"
repo = "apache/httpd"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/httpd/httpd-{version}.tar.gz",
]

[[softwares]]
name = "kafka"
repo = "apache/kafka"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://downloads.apache.org/kafka/{version}/kafka-{version}-src.tgz",
    "https://downloads.apache.org/kafka/{version}/kafka_2.12-{version}.tgz",
    "https://downloads.apache.org/kafka/{version}/kafka_2.13-{version}.tgz",
]

[[softwares]]
name = "doris"
repo = "apache/doris"
by_release = true
category = true
tag_pattern = "^Apache Doris (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.?(\\d+)?) Release$"
download_urls = [
    "https://downloads.apache.org/doris/{major}.{minor}/{version}/apache-doris-{version}-src.tar.gz",
    "https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-{version}-bin-x64.tar.gz",
]

[[softwares]]
name = "maven"
repo = "apache/maven"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/source/apache-maven-{version}-src.tar.gz",
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/binaries/apache-maven-{version}-bin.tar.gz",
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/binaries/apache-maven-{version}-bin.zip",
]

[[softwares]]
name = "hbase"
repo = "apache/hbase"
by_release = true
tag_pattern = "^Apache HBase (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)) is now available for download$"
download_urls = [
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-src.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-client-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-hadoop3-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-hadoop3-client-bin.tar.gz",
]

[[softwares]]
name = "groovy"
repo = "apache/groovy"
category = true
tag_pattern = "^GROOVY_(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-binary-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/sources/apache-groovy-src-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-docs-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-sdk-{major}.{minor}.{patch}.zip",
    "https://groovy.jfrog.io/artifactory/dist-release-local/groovy-windows-installer/groovy-{major}.{minor}.{patch}/groovy-{major}.{minor}.{patch}.msi",
]

[[softwares]]
name = "dolphinscheduler"
repo = "apache/dolphinscheduler"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/dolphinscheduler/{version}/apache-dolphinscheduler-{version}-src.tar.gz",
    "https://dlcdn.apache.org/dolphinscheduler/{version}/apache-dolphinscheduler-{version}-bin.tar.gz",
]

[[softwares]]
name = "echarts"
repo = "apache/echarts"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/echarts/{version}/apache-echarts-{version}-src.zip",
]

[[softwares]]
name = "dubbo"
repo = "apache/dubbo"
by_release = true
tag_pattern = "^dubbo-(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/apache/dubbo/archive/refs/tags/dubbo-{version}.zip",
    "https://github.com/apache/dubbo/archive/refs/tags/dubbo-{version}.tar.gz",
]

[[softwares]]
name = "spark"
repo = "apache/spark"
tag_pattern = "^v(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/spark/spark-{version}/spark-{version}-bin-hadoop3.tgz",
    "https://archive.apache.org/dist/spark/spark-{version}/spark-{version}-bin-without-hadoop.tgz",
    "https://archive.apache.org/dist/spark/spark-{version}/spark-{version}.tgz",
]

[[softwares]]
name = "airflow"
repo = "apache/airflow"
by_release = true
tag_pattern = "^Apache Airflow (?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/apache/airflow/releases/download/{version}/apache-airflow-{version}-source.tar.gz",
    "https://github.com/apache/airflow/releases/download/{version}/apache-airflow-{version}.tar.gz",
    "https://github.com/apache/airflow/releases/download/{version}/apache_airflow-{version}-py3-none-any.whl",
]

[[softwares]]
name = "rocketmq"
repo = "apache/rocketmq"
by_release = true
tag_pattern = "^rocketmq-all-(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/rocketmq/{version}/rocketmq-all-{version}-source-release.zip",
    "https://archive.apache.org/dist/rocketmq/{version}/rocketmq-all-{version}-bin-release.zip",
]

[[softwares]]
name = "druid"
repo = "apache/druid"
by_release = true
tag_pattern = "^Druid (?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/druid/{version}/apache-druid-{version}-src.tar.gz",
    "https://archive.apache.org/dist/druid/{version}/apache-druid-{version}-bin.tar.gz",
]

[[softwares]]
name = "zookeeper"
repo = "apache/zookeeper"
tag_pattern = "^release-(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/zookeeper/zookeeper-{version}/apache-zookeeper-{version}.tar.gz",
    "https://archive.apache.org/dist/zookeeper/zookeeper-{version}/apache-zookeeper-{version}-bin.tar.gz",
]

[[softwares]]
name = "nginx"
repo = "nginx/nginx"
tag_pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://nginx.org/download/nginx-{version}.tar.gz",
]

[[softwares]]
name = "njs"
repo = "nginx/njs"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/nginx/njs/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "ansible"
repo = "ansible/ansible"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/ansible/ansible/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "coredns"
repo = "coredns/coredns"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/coredns/coredns/releases/download/v{version}/coredns_{version}_linux_amd64.tgz",
    "https://github.com/coredns/coredns/releases/download/v{version}/coredns_{version}_windows_amd64.tgz",
]

[[softwares]]
name = "etcd"
repo = "etcd-io/etcd"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/etcd-io/etcd/releases/download/v{version}/etcd-v{version}-linux-amd64.tar.gz",
    "https://github.com/etcd-io/etcd/releases/download/v{version}/etcd-v{version}-windows-amd64.zip",
]

[[softwares]]
name = "consul"
repo = "hashicorp/consul"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://releases.hashicorp.com/consul/{version}/consul_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/consul/{version}/consul_{version}_windows_amd64.zip",
]

[[softwares]]
name = "vagrant"
repo = "hashicorp/vagrant"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://releases.hashicorp.com/vagrant/{version}/vagrant-{version}-1.x86_64.rpm",
    "https://releases.hashicorp.com/vagrant/{version}/vagrant_{version}_windows_amd64.msi",
]

[[softwares]]
name = "vault"
repo = "hashicorp/vault"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://releases.hashicorp.com/vault/{version}/vault_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/vault/{version}/vault_{version}_windows_amd64.zip",
]

[[softwares]]
name = "gpdb"
repo = "greenplum-db/gpdb"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/greenplum-db/gpdb/releases/download/{version}/{version}-src-full.tar.gz",
    "https://github.com/greenplum-db/gpdb/releases/download/{version}/open-source-greenplum-db-{version}-el8-x86_64.rpm",
]

[[softwares]]
name = "netdata"
repo = "netdata/netdata"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/netdata/netdata/releases/download/v{version}/netdata-x86_64-v{version}.gz.run",
]

[[softwares]]
name = "elasticsearch"
repo = "elastic/elasticsearch"
by_release = true
tag_pattern = "^Elasticsearch (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-amd64.deb",
]

[[softwares]]
name = "logstash"
repo = "elastic/logstash"
by_release = true
tag_pattern = "^Logstash (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://artifacts.elastic.co/downloads/logstash/logstash-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/logstash/logstash-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/logstash/logstash-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/logstash/logstash-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-x86_64.rpm",
]

[[softwares]]
name = "kibana"
repo = "elastic/kibana"
by_release = true
tag_pattern = "^Kibana (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://artifacts.elastic.co/downloads/kibana/kibana-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/kibana/kibana-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/kibana/kibana-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/kibana/kibana-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-amd64.deb",
]

[[softwares]]
name = "beats"
repo = "elastic/beats"
by_release = true
tag_pattern = "^Beats (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-windows-x86_64.zip",
]

[[softwares]]
name = "opensearch"
repo = "opensearch-project/OpenSearch"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.tar.gz",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-windows-x64.zip",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.rpm",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.deb",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.tar.gz",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-windows-x64.zip",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.deb",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.rpm",
]

[[softwares]]
name = "kubernetes"
repo = "kubernetes/kubernetes"
by_release = true
tag_pattern = "^Kubernetes v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/kubernetes/kubernetes/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/kubernetes/kubernetes/archive/refs/tags/v{version}.zip",
]

[[softwares]]
name = "rke2"
repo = "rancher/rke2"
by_release = true
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\+rke2r(?P<suffix>\\d))$"
ver_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\+rke2r(?P<suffix>\\d))$"
download_urls = [
    "https://github.com/rancher/rke2/releases/download/v{version}%2Brke2r{suffix}/rke2-images.linux-amd64.tar.gz",
    "https://github.com/rancher/rke2/releases/download/v{version}%2Brke2r{suffix}/rke2.linux-amd64",
    "https://github.com/rancher/rke2/releases/download/v{version}%2Brke2r{suffix}/rke2-windows-amd64.exe",
]

[[softwares]]
name = "gradle"
repo = "gradle/gradle"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(?P<patch>\\.\\d+)?)$"
download_urls = [
    "https://services.gradle.org/distributions/gradle-{version}-bin.zip",
    "https://services.gradle.org/distributions/gradle-{version}-all.zip",
    "https://services.gradle.org/distributions/gradle-{version}-src.zip",
    "https://services.gradle.org/distributions/gradle-{version}-docs.zip",
]

[[softwares]]
name = "memcached"
repo = "memcached/memcached"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.memcached.org/files/memcached-{version}.tar.gz",
]

[[softwares]]
name = "ant-design"
repo = "ant-design/ant-design"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/ant-design/ant-design/archive/refs/tags/{version}.zip",
    "https://github.com/ant-design/ant-design/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "ant-design-vue"
repo = "vueComponent/ant-design-vue"
by_release = true
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/vueComponent/ant-design-vue/archive/refs/tags/{version}.zip",
    "https://github.com/vueComponent/ant-design-vue/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "haproxy"
parser = "docker-library"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.haproxy.org/download/{major}.{minor}/src/haproxy-{version}.tar.gz",
]

[[softwares]]
name = "mongo"
parser = "docker-library"
url = "https://www.mongodb.com/try/download/community"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://fastdl.mongodb.org/src/mongodb-src-r{version}.tar.gz",
    "https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-{version}-signed.msi",
    "https://repo.mongodb.org/yum/redhat/7/mongodb-org/{major}.{minor}/x86_64/RPMS/mongodb-org-server-{version}-1.el7.x86_64.rpm",
    "https://repo.mongodb.org/yum/redhat/8/mongodb-org/{major}.{minor}/x86_64/RPMS/mongodb-org-server-{version}-1.el8.x86_64.rpm",
    "https://repo.mongodb.org/yum/redhat/9/mongodb-org/{major}.{minor}/x86_64/RPMS/mongodb-org-server-{version}-1.el9.x86_64.rpm",
]

[[softwares]]
name = "rabbitmq"
parser = "docker-library"
url = "https://www.rabbitmq.com/download.html"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server-generic-unix-{version}.tar.xz",
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server-{version}-1.el8.noarch.rpm",
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server-{version}.exe",
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server-{version}.tar.xz",
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server-generic-unix-latest-toolchain-{version}.tar.xz",
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server-windows-{version}.zip",
    "https://github.com/rabbitmq/rabbitmq-server/releases/download/v{version}/rabbitmq-server_{version}-1_all.deb",
]

[[softwares]]
name = "mysql"
parser = "docker-library"
url = "https://dev.mysql.com/downloads/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://cdn.mysql.com/Downloads/MySQL-{major}.{minor}/mysql-{version}-winx64.zip",
]

[[softwares]]
name = "postgres"
parser = "docker-library"
url = "https://www.postgresql.org/download/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
category_by_major = true
download_urls = [
    "https://ftp.postgresql.org/pub/source/v{version}/postgresql-{version}.tar.gz",
    "https://ftp.postgresql.org/pub/source/v{version}/postgresql-{version}.tar.bz2",
]

[[softwares]]
name = "centos"
repo = "library/centos"
parser = "docker-hub"
url = "https://www.centos.org/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
category = true
category_by_major = true
download_urls = [
    "https://mirrors.nju.edu.cn/centos/{major}/isos/x86_64/CentOS-{major}-x86_64-Minimal-{patch}.iso",
]

[[softwares]]
name = "almalinux"
repo = "library/almalinux"
parser = "docker-hub"
url = "https://almalinux.org/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
category = true
category_by_major = true
download_urls = [
    "https://hkg.mirror.rackspace.com/almalinux/{version}/isos/x86_64/AlmaLinux-{version}-x86_64-minimal.iso",
    "https://mirrors.aliyun.com/almalinux/{version}/isos/x86_64/AlmaLinux-{version}-x86_64-minimal.iso",
]

[[softwares]]
name = "rockylinux"
repo = "library/rockylinux"
parser = "docker-hub"
url = "https://rockylinux.org/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
category = true
category_by_major = true
download_urls = [
    "https://download.rockylinux.org/pub/rocky/{major}/isos/x86_64/Rocky-{version}-x86_64-minimal.iso",
    "https://mirrors.aliyun.com/rockylinux/{version}/isos/x86_64/Rocky-{version}-x86_64-minimal.iso",
]

[[softwares]]
name = "debian"
repo = "library/debian"
parser = "docker-hub"
url = "https://www.debian.org/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
download_urls = [
    "https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-{version}.0-amd64-netinst.iso",
]

[[softwares]]
name = "ubuntu"
repo = "library/ubuntu"
parser = "docker-hub"
url = "https://ubuntu.com/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
download_urls = [
    "https://ubuntu.com/download",
]

[[softwares]]
name = "gitlab-ce"
repo = "gitlab/gitlab-ce"
parser = "docker-hub"
url = "https://gitlab.com/rluna-gitlab/gitlab-ce"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)-ce\\.\\d)$"
download_urls = [
    "https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-{version}.el7.x86_64.rpm",
    "https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/8/gitlab-ce-{version}.el8.x86_64.rpm",
    "https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/9/gitlab-ce-{version}.el9.x86_64.rpm",
    "https://packages.gitlab.com/gitlab/gitlab-ce/packages/ubuntu/jammy/gitlab-ce_{version}_amd64.deb",
]

[[softwares]]
name = "gitlab-runner"
repo = "gitlab/gitlab-runner"
parser = "docker-hub"
url = "https://gitlab.com/gitlab-org/gitlab-runner"
tag_pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://packages.gitlab.com/runner/gitlab-runner/packages/el/7/gitlab-runner-{version}-1.x86_64.rpm",
    "https://packages.gitlab.com/runner/gitlab-runner/packages/el/7/gitlab-runner-fips-{version}-1.x86_64.rpm",
    "https://packages.gitlab.com/runner/gitlab-runner/packages/ubuntu/focal/gitlab-runner_{version}_amd64.deb",
]

[[softwares]]
name = "percona-server"
repo = "percona/percona-server"
parser = "docker-hub"
url = "https://www.percona.com/"
tag_pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
category = true
download_urls = [
    "https://docs.percona.com/percona-server/8.0/installation.html",
    "https://www.percona.com/downloads",
]

[[softwares]]
name = "flume"
parser = "apache-flume"
url = "https://flume.apache.org/releases/index.html"
download_urls = [
    "https://dlcdn.apache.org/flume/{version}/apache-flume-{version}-src.tar.gz",
    "https://dlcdn.apache.org/flume/{version}/apache-flume-{version}-bin.tar.gz",
]

[[softwares]]
name = "nexus"
parser = "sonatype-nexus"
url = "https://raw.githubusercontent.com/sonatype/docker-nexus3/main/Dockerfile"
download_urls = [
    "https://download.sonatype.com/nexus/3/nexus-{version}-unix.tar.gz",
    "https://download.sonatype.com/nexus/3/nexus-{version}-win64.zip",
]

[[softwares]]
name = "nodejs"
parser = "nodejs"
url = "https://nodejs.org/download/release/index.json"
download_urls = [
    "https://nodejs.org/dist/v{version}/node-v{version}-x64.msi",
    "https://nodejs.org/dist/v{version}/node-v{version}-win-x64.zip",
    "https://nodejs.org/dist/v{version}/node-v{version}-linux-x64.tar.xz",
    "https://nodejs.org/dist/v{version}/node-v{version}.tar.gz",
]

[[softwares]]
name = "ruby"
parser = "ruby"
url = "https://rubychangelog.com/versions-latest/"
download_urls = [
    "https://cache.ruby-lang.org/pub/ruby/{major}.{minor}/ruby-{version}.tar.gz",
]

[[softwares]]
name = "virtualbox"
parser = "virtualbox"
url = "https://www.virtualbox.org/wiki/Downloads"
