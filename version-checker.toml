[app]
title = "Software version checker"

[[softwares]]
name = "almalinux"
url = "https://almalinux.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
parser = "almalinux"
split = 1
download_urls = [
    "https://mirrors.nju.edu.cn/almalinux/{version}/isos/x86_64/AlmaLinux-{version}-x86_64-minimal.iso",
]

[[softwares]]
name = "rockylinux"
url = "https://rockylinux.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
parser = "rockylinux"
download_urls = [
    "https://mirrors.nju.edu.cn/rocky/{version}/isos/x86_64/Rocky-{version}-x86_64-minimal.iso",
]
split = 1

[[softwares]]
name = "git"
repo = "git/git"
url = "https://git-scm.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://kernel.org/pub/software/scm/git/git-{version}.tar.gz",
    "https://kernel.org/pub/software/scm/git/git-htmldocs-{version}.tar.gz",
    "https://kernel.org/pub/software/scm/git/git-manpages-{version}.tar.gz",
]

[[softwares]]
name = "git-for-windows"
repo = "git-for-windows/git"
url = "https://gitforwindows.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.windows\\.(?P<build>\\d+))$"
release = true
download_urls = [
    "https://github.com/git-for-windows/git/releases/download/v{major}.{minor}.{patch}.windows.{build}/Git-{major}.{minor}.{patch}-64-bit.exe",
]

[[softwares]]
name = "beanstalkd"
repo = "beanstalkd/beanstalkd"
url = "https://beanstalkd.github.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
download_urls = [
    "https://github.com/beanstalkd/beanstalkd/archive/v{version}.tar.gz",
]

[[softwares]]
name = "nodejs"
repo = "nodejs/node"
url = "https://nodejs.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 1
download_urls = [
    "https://nodejs.org/dist/v{version}/node-v{version}-x64.msi",
]

[[softwares]]
name = "go"
url = "https://go.dev/"
parser = "go"
pattern = "^go(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://go.dev/dl/go{version}.src.tar.gz",
    "https://go.dev/dl/go{version}.linux-amd64.tar.gz",
    "https://go.dev/dl/go{version}.windows-amd64.zip",
    "https://go.dev/dl/go{version}.windows-amd64.msi",
]

[[softwares]]
name = "openssl"
repo = "openssl/openssl"
url = "https://www.openssl.org/"
pattern = "^(?:openssl-|OpenSSL_)(?P<version>(?P<major>\\d+)[_.](?P<minor>\\d+)[_.](?P<patch>(?P<number>\\d+))(?P<letter>[a-z]?))$"
release = true
split = 2
download_dynamic = true

[[softwares]]
name = "sqlite"
repo = "sqlite/sqlite"
url = "https://www.sqlite.org/"
pattern = "^version-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_dynamic = true

[[softwares]]
name = "swoole"
repo = "swoole/swoole-src"
url = "https://www.swoole.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://pecl.php.net/get/swoole-{version}.tgz",
]

[[softwares]]
name = "grpc"
repo = "grpc/grpc"
url = "https://grpc.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://pecl.php.net/get/grpc-{version}.tgz",
]

[[softwares]]
name = "protobuf"
repo = "protocolbuffers/protobuf"
url = "https://protobuf.dev/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protoc-{version}-win64.zip",
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protoc-{version}-linux-x86_64.zip",
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protobuf-{version}.zip",
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protobuf-{version}.tar.gz",
]

[[softwares]]
name = "harbor"
repo = "goharbor/harbor"
url = "https://goharbor.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/goharbor/harbor/releases/download/v{version}/harbor-online-installer-v{version}.tgz",
]

[[softwares]]
name = "docker-compose"
repo = "docker/compose"
url = "https://docs.docker.com/compose/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/docker/compose/releases/download/v{version}/docker-compose-linux-x86_64#docker-compose-v{version}-linux-x86_64"
]

[[softwares]]
name = "go-md2man"
repo = "cpuguy83/go-md2man"
url = "https://github.com/cpuguy83/go-md2man"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/cpuguy83/go-md2man/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "conmon"
repo = "containers/conmon"
url = "https://github.com/containers/conmon"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/conmon/releases/download/v{version}/conmon.amd64#conmon-{version}.amd64",
    "https://github.com/containers/conmon/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "runc"
repo = "opencontainers/runc"
url = "https://github.com/opencontainers/runc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/opencontainers/runc/releases/download/v{version}/runc.amd64#runc-{version}.amd64",
    "https://github.com/opencontainers/runc/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "containers-common"
repo = "containers/common"
url = "https://github.com/containers/common"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/common/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "crun"
repo = "containers/crun"
url = "https://github.com/containers/crun"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/containers/crun/releases/download/1.15/crun-1.15-linux-amd64",
    "https://github.com/containers/crun/releases/download/1.15/crun-1.15-linux-amd64-disable-systemd",
    "https://github.com/containers/crun/releases/download/1.15/crun-1.15.tar.gz",
]

[[softwares]]
name = "netavark"
repo = "containers/netavark"
url = "https://github.com/containers/netavark"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/netavark/releases/download/v{version}/netavark-v{version}-vendor.tar.gz",
    "https://github.com/containers/netavark/releases/download/v{version}/netavark.gz",
    "https://github.com/containers/netavark/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "buildah"
repo = "containers/buildah"
url = "https://buildah.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/buildah/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "skopeo"
repo = "containers/skopeo"
url = "https://github.com/containers/skopeo"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/skopeo/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "podman"
repo = "containers/podman"
url = "https://podman.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/podman/releases/download/v{version}/podman-{version}-setup.exe",
    "https://github.com/containers/podman/releases/download/v{version}/podman-remote-release-windows_amd64.zip",
    "https://github.com/containers/podman/releases/download/v{version}/podman-remote-static-linux_amd64.tar.gz",
    "https://github.com/containers/podman/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "podman-desktop"
repo = "containers/podman-desktop"
url = "https://podman-desktop.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/podman-desktop/releases/download/v{version}/podman-desktop-{version}-setup-x64.exe",
    "https://github.com/containers/podman-desktop/releases/download/v{version}/podman-desktop-{version}-x64.exe",
    "https://github.com/containers/podman-desktop/releases/download/v{version}/podman-desktop-airgap-{version}-setup-x64.exe",
]

[[softwares]]
name = "dnsname"
repo = "containers/dnsname"
url = "https://github.com/containers/dnsname"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/dnsname/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "catatonit"
repo = "openSUSE/catatonit"
url = "https://github.com/openSUSE/catatonit"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/openSUSE/catatonit/releases/download/v{version}/catatonit.x86_64#catatonit-{version}.x86_64",
    "https://github.com/openSUSE/catatonit/releases/download/v{version}/catatonit.tar.xz#catatonit-{version}.tar.xz",
    "https://github.com/openSUSE/catatonit/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "graalvm-ce-builds"
repo = "graalvm/graalvm-ce-builds"
url = "https://www.graalvm.org/"
pattern = "^jdk-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 1
download_urls = [
    "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-{version}/graalvm-community-jdk-{version}_linux-x64_bin.tar.gz",
    "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-{version}/graalvm-community-jdk-{version}_windows-x64_bin.zip",
]

[[softwares]]
name = "stonedb"
repo = "stoneatom/stonedb"
url = "https://stonedb.io/"
pattern = "^5\\.7-v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))-GA$"
download_urls = [
    "https://github.com/stoneatom/stonedb/releases/download/5.7-v{version}-GA/stonedb-ce-5.7-v{version}.el7.x86_64.rpm",
    "https://github.com/stoneatom/stonedb/releases/download/5.7-v{version}-GA/stonedb-ce-5.7-v{version}.ubuntu.amd64.deb",
    "https://github.com/stoneatom/stonedb/releases/download/5.7-v{version}-GA/stonedb-ce-5.7-v{version}.el7.x86_64.tar.gz",
]

[[softwares]]
name = "solon"
repo = "noear/solon"
url = "https://solon.noear.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/noear/solon/archive/refs/tags/v{version}.zip",
    "https://github.com/noear/solon/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libjxl"
repo = "libjxl/libjxl"
url = "https://github.com/libjxl/libjxl"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libjxl/libjxl/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/libjxl/libjxl/releases/download/v{version}/jxl-linux-x86_64-static-v{version}.tar.gz",
    "https://github.com/libjxl/libjxl/releases/download/v{version}/jxl-x64-windows-static.zip#jxl-x64-windows-static-v{version}.zip",
    "https://github.com/libjxl/libjxl/releases/download/v{version}/jxl-x64-windows.zip#jxl-x64-windows-v{version}.zip",
]

[[softwares]]
name = "libmustache"
repo = "jbboehr/libmustache"
url = "https://github.com/jbboehr/libmustache"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/jbboehr/libmustache/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libmaxminddb"
repo = "maxmind/libmaxminddb"
url = "https://github.com/maxmind/libmaxminddb"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/maxmind/libmaxminddb/releases/download/{version}/libmaxminddb-{version}.tar.gz",
]

[[softwares]]
name = "geoipupdate"
repo = "maxmind/geoipupdate"
url = "https://dev.maxmind.com/geoip/updating-databases"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.deb",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.rpm",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.tar.gz",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_windows_amd64.zip",
]

[[softwares]]
name = "zfs"
repo = "openzfs/zfs"
url = "https://openzfs.org/"
pattern = "^zfs-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/openzfs/zfs/releases/download/zfs-{version}/zfs-{version}.tar.gz",
]

[[softwares]]
name = "upx"
repo = "upx/upx"
url = "https://upx.github.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-amd64_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-win64.zip",
]

[[softwares]]
name = "curl"
repo = "curl/curl"
url = "https://curl.se/"
pattern = "^curl-(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://curl.se/download/curl-{major}.{minor}.{patch}.tar.gz",
    "https://github.com/stunnel/static-curl/releases/download/{major}.{minor}.{patch}/curl-linux-x86_64-{major}.{minor}.{patch}.tar.xz",
    "https://github.com/stunnel/static-curl/releases/download/{major}.{minor}.{patch}/curl-windows-x86_64-{major}.{minor}.{patch}.tar.xz",
]

[[softwares]]
name = "libgd"
repo = "libgd/libgd"
url = "https://libgd.github.io/"
pattern = "^gd-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/libgd/libgd/releases/download/gd-{version}/libgd-{version}.tar.gz",
]

[[softwares]]
name = "corretto-8"
repo = "corretto/corretto-8"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+))$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-11"
repo = "corretto/corretto-11"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-17"
repo = "corretto/corretto-17"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-21"
repo = "corretto/corretto-21"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "python"
repo = "python/cpython"
url = "https://www.python.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://www.python.org/ftp/python/{version}/Python-{version}.tgz",
    "https://www.python.org/ftp/python/{version}/Python-{version}.tar.xz",
    "https://www.python.org/ftp/python/{version}/python-{version}-amd64.exe",
]

[[softwares]]
name = "php"
url = "https://www.php.net/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "php"
major = [7, 8]
split = 2
download_urls = [
    "https://www.php.net/distributions/php-{version}.tar.gz",
]

[[softwares]]
name = "redis"
repo = "redis/redis"
url = "https://redis.io/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 2
download_urls = [
    "https://download.redis.io/releases/redis-{version}.tar.gz",
]

[[softwares]]
name = "valkey"
repo = "valkey-io/valkey"
url = "https://valkey.io/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/valkey-io/valkey/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "composer"
repo = "composer/composer"
url = "https://getcomposer.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 2
download_urls = [
    "https://getcomposer.org/download/{version}/composer.phar#composer-{major}.{minor}.{patch}.phar",
]

[[softwares]]
name = "utf8proc"
repo = "JuliaStrings/utf8proc"
url = "https://github.com/JuliaStrings/utf8proc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/JuliaStrings/utf8proc/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "serf"
repo = "apache/serf"
url = "https://serf.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/serf/serf-{version}.zip",
    "https://archive.apache.org/dist/serf/serf-{version}.tar.bz2",
]

[[softwares]]
name = "subversion"
repo = "apache/subversion"
url = "https://subversion.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/subversion/subversion-{version}.tar.gz",
    "https://www.visualsvn.com/files/Apache-Subversion-{version}.zip",
]

[[softwares]]
name = "httpd"
repo = "apache/httpd"
url = "https://httpd.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/httpd/httpd-{version}.tar.gz",
]

[[softwares]]
name = "kafka"
repo = "apache/kafka"
url = "https://kafka.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://archive.apache.org/dist/kafka/{version}/kafka-{version}-src.tgz",
    "https://archive.apache.org/dist/kafka/{version}/kafka_2.12-{version}.tgz",
    "https://archive.apache.org/dist/kafka/{version}/kafka_2.13-{version}.tgz",
]

[[softwares]]
name = "doris"
repo = "apache/doris"
url = "https://doris.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?:\\.\\d+)?)$"
release = true
download_urls = [
    "https://downloads.apache.org/doris/{major}.{minor}/{major}.{minor}.{patch}/apache-doris-{major}.{minor}.{patch}-src.tar.gz",
    "https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-{major}.{minor}.{patch}-bin-x64.tar.gz",
]

[[softwares]]
name = "maven"
repo = "apache/maven"
url = "https://maven.apache.org/"
pattern = "^maven-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/source/apache-maven-{version}-src.tar.gz",
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/binaries/apache-maven-{version}-bin.zip",
]

[[softwares]]
name = "groovy"
repo = "apache/groovy"
url = "https://groovy-lang.org/"
pattern = "^GROOVY_(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/sources/apache-groovy-src-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-binary-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-docs-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-sdk-{major}.{minor}.{patch}.zip",
    "https://groovy.jfrog.io/artifactory/dist-release-local/groovy-windows-installer/groovy-{major}.{minor}.{patch}/groovy-{major}.{minor}.{patch}.msi",
]

[[softwares]]
name = "dolphinscheduler"
repo = "apache/dolphinscheduler"
url = "https://dolphinscheduler.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://archive.apache.org/dist/dolphinscheduler/{version}/apache-dolphinscheduler-{version}-src.tar.gz",
    "https://archive.apache.org/dist/dolphinscheduler/{version}/apache-dolphinscheduler-{version}-bin.tar.gz",
]

[[softwares]]
name = "dubbo"
repo = "apache/dubbo"
url = "https://dubbo.apache.org/"
pattern = "^(dubbo-)?(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/apache/dubbo/archive/refs/tags/{version}.zip",
    "https://github.com/apache/dubbo/archive/refs/tags/dubbo-{version}.zip",
    "https://archive.apache.org/dist/dubbo/{version}/apache-dubbo-{version}-src.zip",
]

[[softwares]]
name = "druid"
repo = "apache/druid"
url = "https://druid.apache.org/"
pattern = "^druid-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://dlcdn.apache.org/druid/{version}/apache-druid-{version}-src.tar.gz",
    "https://dlcdn.apache.org/druid/{version}/apache-druid-{version}-bin.tar.gz",
]

[[softwares]]
name = "zookeeper"
repo = "apache/zookeeper"
url = "https://zookeeper.apache.org/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://archive.apache.org/dist/zookeeper/zookeeper-{version}/apache-zookeeper-{version}.tar.gz",
    "https://archive.apache.org/dist/zookeeper/zookeeper-{version}/apache-zookeeper-{version}-bin.tar.gz",
]

[[softwares]]
name = "hbase"
repo = "apache/hbase"
url = "https://hbase.apache.org/"
pattern = "^rel/(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-src.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-client-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-hadoop3-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-hadoop3-client-bin.tar.gz",
]

[[softwares]]
name = "spark"
repo = "apache/spark"
url = "https://spark.apache.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/spark/spark-{version}/spark-{version}-bin-hadoop3.tgz",
    "https://dlcdn.apache.org/spark/spark-{version}/spark-{version}-bin-without-hadoop.tgz",
    "https://dlcdn.apache.org/spark/spark-{version}/spark-{version}.tgz",
    "https://dlcdn.apache.org/spark/spark-{version}/pyspark-{version}.tar.gz",
]

[[softwares]]
name = "hadoop"
repo = "apache/hadoop"
url = "https://hadoop.apache.org/"
pattern = "^rel/release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/hadoop/common/hadoop-{version}/hadoop-{version}-src.tar.gz",
    "https://dlcdn.apache.org/hadoop/common/hadoop-{version}/hadoop-{version}.tar.gz",
]
max_page = 5

[[softwares]]
name = "dinky"
repo = "DataLinkDC/dinky"
url = "https://www.dinky.org.cn/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
assets = true
download_urls = [
    "https://github.com/DataLinkDC/dinky/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "flink"
repo = "apache/flink"
url = "https://flink.apache.org/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/flink/flink-{version}/flink-{version}-src.tgz",
    "https://dlcdn.apache.org/flink/flink-{version}/flink-{version}-bin-scala_2.12.tgz",
]

[[softwares]]
name = "foundationdb"
repo = "apple/foundationdb"
url = "https://www.foundationdb.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbbackup.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbcli.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbdecode.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbmonitor.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbserver.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/foundationdb-clients-{version}-1.el7.x86_64.rpm",
    "https://github.com/apple/foundationdb/releases/download/{version}/foundationdb-server-{version}-1.el7.x86_64.rpm",
    "https://github.com/apple/foundationdb/releases/download/{version}/libfdb_c.x86_64.so",
    "https://github.com/apple/foundationdb/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "nginx"
repo = "nginx/nginx"
url = "https://nginx.org/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://nginx.org/download/nginx-{version}.tar.gz",
]

[[softwares]]
name = "njs"
repo = "nginx/njs"
url = "https://nginx.org/en/docs/njs/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/nginx/njs/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "coredns"
repo = "coredns/coredns"
url = "https://coredns.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/coredns/coredns/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/coredns/coredns/releases/download/v{version}/coredns_{version}_linux_amd64.tgz",
    "https://github.com/coredns/coredns/releases/download/v{version}/coredns_{version}_windows_amd64.tgz",
]

[[softwares]]
name = "etcd"
repo = "etcd-io/etcd"
url = "https://etcd.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/etcd-io/etcd/releases/download/v{version}/etcd-v{version}-linux-amd64.tar.gz",
    "https://github.com/etcd-io/etcd/releases/download/v{version}/etcd-v{version}-windows-amd64.zip",
]

[[softwares]]
name = "consul"
repo = "hashicorp/consul"
url = "https://www.consul.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://releases.hashicorp.com/consul/{version}/consul_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/consul/{version}/consul_{version}_windows_amd64.zip",
]

[[softwares]]
name = "vagrant"
repo = "hashicorp/vagrant"
url = "https://www.vagrantup.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://releases.hashicorp.com/vagrant/{version}/vagrant-{version}-1.x86_64.rpm",
    "https://releases.hashicorp.com/vagrant/{version}/vagrant_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/vagrant/{version}/vagrant_{version}_windows_amd64.msi",
]

[[softwares]]
name = "vault"
repo = "hashicorp/vault"
url = "https://www.vaultproject.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://releases.hashicorp.com/vault/{version}/vault_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/vault/{version}/vault_{version}_windows_amd64.zip",
]

[[softwares]]
name = "netdata"
repo = "netdata/netdata"
url = "https://www.netdata.cloud/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/netdata/netdata/releases/download/v{version}/netdata-x86_64-v{version}.gz.run",
]

[[softwares]]
name = "elasticsearch"
repo = "elastic/elasticsearch"
url = "https://www.elastic.co/elasticsearch"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-amd64.deb",
]

[[softwares]]
name = "logstash"
repo = "elastic/logstash"
url = "https://www.elastic.co/logstash"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-x86_64.rpm",
]

[[softwares]]
name = "kibana"
repo = "elastic/kibana"
url = "https://www.elastic.co/kibana"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-amd64.deb",
]

[[softwares]]
name = "beats"
repo = "elastic/beats"
url = "https://www.elastic.co/beats"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-windows-x86_64.zip",
]

[[softwares]]
name = "opensearch"
repo = "opensearch-project/OpenSearch"
url = "https://opensearch.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.tar.gz",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-windows-x64.zip",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.rpm",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.deb",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.tar.gz",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-windows-x64.zip",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.deb",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.rpm",
]

[[softwares]]
name = "gradle"
repo = "gradle/gradle"
url = "https://gradle.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_dynamic = true

[[softwares]]
name = "memcached"
repo = "memcached/memcached"
url = "https://memcached.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.memcached.org/files/memcached-{version}.tar.gz",
]

[[softwares]]
name = "caddy"
repo = "caddyserver/caddy"
url = "https://caddyserver.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/caddyserver/caddy/releases/download/v2.7.5/caddy_2.7.5_linux_amd64.tar.gz",
    "https://github.com/caddyserver/caddy/releases/download/v2.7.5/caddy_2.7.5_windows_amd64.zip",
]

[[softwares]]
name = "msys2"
repo = "msys2/msys2-installer"
url = "https://www.msys2.org/"
pattern = "^(?P<version>(?P<major>(?P<year>\\d+))-(?P<minor>(?P<month>\\d+))-(?P<patch>(?P<day>\\d+)))$"
release = true
download_urls = [
    "https://github.com/msys2/msys2-installer/releases/download/{year}-{month}-{day}/msys2-x86_64-{year}{month}{day}.exe",
]

[[softwares]]
name = "prometheus"
repo = "prometheus/prometheus"
url = "https://prometheus.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/prometheus/prometheus/releases/download/v{version}/prometheus-{version}.linux-amd64.tar.gz",
    "https://github.com/prometheus/prometheus/releases/download/v{version}/prometheus-{version}.windows-amd64.zip",
    "https://github.com/prometheus/prometheus/releases/download/v{version}/prometheus-web-ui-{version}.tar.gz",
]

[[softwares]]
name = "pushgateway"
repo = "prometheus/pushgateway"
url = "https://prometheus.io/docs/practices/pushing/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/prometheus/pushgateway/releases/download/v{version}/pushgateway-{version}.linux-amd64.tar.gz",
    "https://github.com/prometheus/pushgateway/releases/download/v{version}/pushgateway-{version}.windows-amd64.zip",
]

[[softwares]]
name = "alertmanager"
repo = "prometheus/alertmanager"
url = "https://github.com/prometheus/alertmanager"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/prometheus/alertmanager/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/prometheus/alertmanager/releases/download/v{version}/alertmanager-{version}.linux-amd64.tar.gz",
    "https://github.com/prometheus/alertmanager/releases/download/v{version}/alertmanager-{version}.windows-amd64.zip",
]

[[softwares]]
name = "helm"
repo = "helm/helm"
url = "https://helm.sh/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://get.helm.sh/helm-v{version}-linux-amd64.tar.gz",
    "https://get.helm.sh/helm-v{version}-darwin-amd64.tar.gz",
    "https://get.helm.sh/helm-v{version}-darwin-arm64.tar.gz",
    "https://get.helm.sh/helm-v{version}-linux-arm64.tar.gz",
    "https://get.helm.sh/helm-v{version}-windows-amd64.zip",
]

[[softwares]]
name = "haproxy"
repo = "haproxy/haproxy"
url = "https://www.haproxy.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.haproxy.org/download/{major}.{minor}/src/haproxy-{version}.tar.gz",
]
split = 2
max_page = 2

[[softwares]]
name = "flume"
parser = "apache-flume"
url = "https://flume.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/flume/{version}/apache-flume-{version}-src.tar.gz",
    "https://dlcdn.apache.org/flume/{version}/apache-flume-{version}-bin.tar.gz",
]

[[softwares]]
name = "ant"
repo = "apache/ant"
url = "https://ant.apache.org/"
pattern = "^rel/(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/ant/binaries/apache-ant-{version}-bin.zip",
    "https://archive.apache.org/dist/ant/source/apache-ant-{version}-src.tar.gz",
]

[[softwares]]
name = "vscode"
repo = "microsoft/vscode"
url = "https://code.visualstudio.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://update.code.visualstudio.com/{version}/win32-x64/stable",
]

[[softwares]]
name = "awscli"
repo = "aws/aws-cli"
url = "https://docs.aws.amazon.com/cli/latest/userguide/getting-started-version.html"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-{version}.zip",
    "https://awscli.amazonaws.com/AWSCLIV2-{version}.msi",
]

[[softwares]]
name = "dotnetfx"
url = "https://dotnet.microsoft.com/en-us/download/dotnet-framework"
pattern = "^\\.NET Framework (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?)$"
parser = "dotnetfx"
download_urls = [
    "https://dotnet.microsoft.com/en-us/download/dotnet-framework/thank-you/net{major}{minor}{patch}-developer-pack-offline-installer",
    "https://dotnet.microsoft.com/en-us/download/dotnet-framework/thank-you/net{major}{minor}{patch}-offline-installer",
]

[[softwares]]
name = "dotnet"
url = "https://dotnet.microsoft.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "dotnet"

[[softwares]]
name = "sublime"
url = "https://www.sublimetext.com/"
pattern = "^Version: Build (?P<version>(?P<major>\\d+))$"
parser = "sublime"
download_urls = [
    "https://download.sublimetext.com/sublime_text_build_{version}_x64_setup.exe",
    "https://download.sublimetext.com/sublime_text_build_{version}_x64.zip",
]

[[softwares]]
name = "xshell"
url = "https://www.netsarang.com/en/xshell/"
pattern = "^Xshell (?P<version>(?P<major>\\d+) Build (?P<build>\\d+))(?:.+)$"
parser = "xshell"
download_urls = [
    "https://cdn.netsarang.net/v{major}/Xshell-latest-p",
    "https://cdn.netsarang.net/v{major}/Xftp-latest-p",
]

[[softwares]]
name = "virtualbox"
url = "https://www.virtualbox.org/wiki/Downloads"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "virtualbox"

[[softwares]]
name = "flutter"
url = "https://flutter.dev/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "flutter"
download_urls = [
    "https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_{version}-stable.zip",
]

[[softwares]]
name = "dart"
url = "https://dart.dev/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "dart"
download_urls = [
    "https://storage.googleapis.com/dart-archive/channels/stable/release/{version}/sdk/dartsdk-windows-x64-release.zip#dartsdk-{version}-windows-x64-release.zip",
    "https://storage.googleapis.com/dart-archive/channels/stable/release/{version}/api-docs/dartdocs-gen-api.zip#dartdocs-{version}-gen-api.zip",
]

[[softwares]]
name = "android-studio"
url = "https://developer.android.com/studio"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
parser = "android-studio"
download_urls = [
    "https://redirector.gvt1.com/edgedl/android/studio/install/{version}/android-studio-{version}-windows.exe",
]

[[softwares]]
name = "chrome"
url = "https://www.google.com/chrome/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
parser = "chrome"
download_urls = [
    "https://dl.google.com/update2/installers/ChromeStandaloneSetup64.exe#ChromeStandaloneSetup64-{version}.exe",
]

[[softwares]]
name = "firefox"
url = "https://www.mozilla.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
parser = "firefox"
download_urls = [
    "https://download-installer.cdn.mozilla.net/pub/firefox/releases/{version}/win64/zh-CN/Firefox%20Setup%20{version}.exe",
]

[[softwares]]
name = "gh"
repo = "cli/cli"
url = "https://cli.github.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/cli/cli/releases/download/v{version}/gh_{version}_linux_amd64.rpm",
    "https://github.com/cli/cli/releases/download/v{version}/gh_{version}_linux_amd64.tar.gz",
    "https://github.com/cli/cli/releases/download/v{version}/gh_{version}_windows_amd64.zip",
]

[[softwares]]
name = "github-desktop"
url = "https://desktop.github.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "github-desktop"
download_urls = [
    "https://central.github.com/deployments/desktop/desktop/latest/win32#GitHubDesktopSetup-x64-{version}.exe",
]

[[softwares]]
name = "jetbrains"
url = "https://www.jetbrains.com/"
pattern = "^(?P<version>(?P<major>\\d{4})\\.(?P<minor>\\d)\\.(?P<patch>\\d))$"
parser = "jetbrains"
code = [ "AC", "CL", "RSU", "DG", "GO", "IIU", "PS", "PCP", "RD", "RM", "WS", "FL", "RR", "DS", "TC", "WRS" ]
os = [ "windows" ]

[[softwares]]
name = "libgd"
repo = "libgd/libgd"
url = "https://www.libgd.org/"
pattern = "^gd-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libgd/libgd/releases/download/gd-{version}/libgd-{version}.tar.gz",
    "https://github.com/libgd/libgd/archive/refs/tags/gd-{version}.tar.gz",
]

[[softwares]]
name = "libdatrie"
repo = "tlwg/libdatrie"
url = "https://github.com/tlwg/libdatrie"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/tlwg/libdatrie/releases/download/v{version}/libdatrie-{version}.tar.xz",
    "https://github.com/tlwg/libdatrie/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libvips"
repo = "libvips/libvips"
url = "https://github.com/libvips/libvips"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libvips/libvips/releases/download/v{version}/vips-{version}.tar.xz",
    "https://github.com/libvips/libvips/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libzip"
repo = "nih-at/libzip"
url = "https://libzip.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/nih-at/libzip/releases/download/v{version}/libzip-{version}.tar.gz",
]

[[softwares]]
name = "re2c"
repo = "skvadrik/re2c"
url = "https://re2c.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?)$"
release = true
download_urls = [
    "https://github.com/skvadrik/re2c/releases/download/{version}/re2c-{version}.tar.xz",
    "https://github.com/skvadrik/re2c/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "libwebp"
repo = "webmproject/libwebp"
url = "https://www.webmproject.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/webmproject/libwebp/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libpng"
repo = "pnggroup/libpng"
url = "http://www.libpng.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/pnggroup/libpng/archive/refs/tags/v{version}.tar.gz",
]
max_page = 2

[[softwares]]
name = "createrepo_c"
repo = "rpm-software-management/createrepo_c"
url = "https://github.com/rpm-software-management/createrepo_c"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rpm-software-management/createrepo_c/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "libgit2"
repo = "libgit2/libgit2"
url = "https://libgit2.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libgit2/libgit2/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "handlebars.c"
repo = "jbboehr/handlebars.c"
url = "https://github.com/jbboehr/handlebars.c"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/jbboehr/handlebars.c/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "ip2proxy-c"
repo = "ip2location/ip2proxy-c"
url = "https://github.com/ip2location/ip2proxy-c"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ip2location/ip2proxy-c/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "libbase58"
repo = "bitcoin/libbase58"
url = "https://github.com/bitcoin/libbase58"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/bitcoin/libbase58/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "librdkafka"
repo = "confluentinc/librdkafka"
url = "https://github.com/confluentinc/librdkafka"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/confluentinc/librdkafka/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libxdiff"
repo = "opencor/libxdiff"
url = "https://github.com/opencor/libxdiff"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?)$"
release = true
download_urls = [
    "https://github.com/opencor/libxdiff/releases/download/v{version}/LibXDiff.{version}.linux.tar.gz",
    "https://github.com/opencor/libxdiff/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "utf8proc"
repo = "JuliaStrings/utf8proc"
url = "https://github.com/JuliaStrings/utf8proc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/JuliaStrings/utf8proc/releases/download/v{version}/utf8proc-{version}.tar.gz",
]

[[softwares]]
name = "juicefs"
repo = "juicedata/juicefs"
url = "https://juicefs.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/juicedata/juicefs/releases/download/v{version}/juicefs-{version}-linux-amd64.tar.gz",
    "https://github.com/juicedata/juicefs/releases/download/v{version}/juicefs-{version}-windows-amd64.tar.gz",
    "https://github.com/juicedata/juicefs/releases/download/v{version}/juicefs-hadoop-{version}.jar",
    "https://github.com/juicedata/juicefs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "aliyun-ossfs"
repo = "aliyun/ossfs"
url = "https://github.com/aliyun/ossfs"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/aliyun/ossfs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "cosfs"
repo = "tencentyun/cosfs"
url = "https://github.com/tencentyun/cosfs"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/tencentyun/cosfs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "s3fs-fuse"
repo = "s3fs-fuse/s3fs-fuse"
url = "https://github.com/s3fs-fuse/s3fs-fuse"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/s3fs-fuse/s3fs-fuse/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "wget2"
repo = "rockdaboot/wget2"
url = "https://github.com/rockdaboot/wget2"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/rockdaboot/wget2/releases/download/v{version}/wget2-{version}.tar.gz",
    "https://github.com/rockdaboot/wget2/releases/download/v{version}/wget2.exe#wget2-{version}.exe",
]

[[softwares]]
name = "aria2"
repo = "aria2/aria2"
url = "https://aria2.github.io/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
assets = true

[[softwares]]
name = "rsync"
repo = "WayneD/rsync"
url = "https://rsync.samba.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/RsyncProject/rsync/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "rclone"
repo = "rclone/rclone"
url = "https://rclone.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-linux-amd64.rpm",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-linux-amd64.deb",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-linux-amd64.zip",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-windows-amd64.zip",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}.tar.gz",
]

[[softwares]]
name = "minio"
repo = "minio/minio"
url = "https://min.io/"
pattern = "^(?P<version>RELEASE.(?P<major>\\d{4})-(?P<minor>\\d{2})-(?P<patch>\\d{2})T\\d{2}-\\d{2}-\\d{2}Z)$"
release = true
download_urls = [
    "https://dl.min.io/server/minio/release/linux-amd64/minio.{version}",
]

[[softwares]]
name = "mc"
repo = "minio/mc"
url = "https://min.io/"
pattern = "^(?P<version>RELEASE.(?P<major>\\d{4})-(?P<minor>\\d{2})-(?P<patch>\\d{2})T\\d{2}-\\d{2}-\\d{2}Z)$"
release = true
download_urls = [
    "https://dl.min.io/client/mc/release/linux-amd64/mc.{version}",
]

[[softwares]]
name = "byconity"
repo = "ByConity/ByConity"
url = "https://byconity.github.io/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-client-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-client-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-common-static-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-common-static-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-daemon-manager-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-daemon-manager-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-resource-manager-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-resource-manager-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-server-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-server-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-tso-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-tso-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-write-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-write-{version}.x86_64.rpm",
]

[[softwares]]
name = "bind9"
url = "https://www.isc.org/bind/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "gitlab"
host = "gitlab.isc.org"
id = 1
download_urls = [
    "https://downloads.isc.org/isc/bind9/{version}/BIND{version}.x64.zip",
    "https://downloads.isc.org/isc/bind9/{version}/bind-{version}.tar.xz",
]

[[softwares]]
name = "TortoiseGit"
id = 384627
url = "https://tortoisegit.org/"
pattern = "^REL_(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))_EXTERNAL$"
parser = "gitlab"
by_tag_name = true
download_urls = [
    "https://download.tortoisegit.org/tgit/{version}/TortoiseGit-{version}-64bit.msi",
    "https://download.tortoisegit.org/tgit/{version}/TortoiseGit-LanguagePack-{version}-64bit-zh_CN.msi",
]

[[softwares]]
name = "TortoiseSVN"
url = "https://tortoisesvn.net/"
pattern = "^TortoiseSVN-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))-x64-svn-(?P<other>[.\\d]+).msi$"
parser = "sf"
project = "tortoisesvn"
download_urls = [
    "https://sourceforge.net/projects/tortoisesvn/files/{major}.{minor}.{patch}/Application/TortoiseSVN-{version}-x64-svn-{other}.msi/download#TortoiseSVN-{version}-x64-svn-{other}.msi",
    "https://sourceforge.net/projects/tortoisesvn/files/{major}.{minor}.{patch}/Language%20Packs/LanguagePack_{version}-x64-zh_CN.msi/download#LanguagePack_{version}-x64-zh_CN.msi",
]

[[softwares]]
name = "7-zip"
url = "https://www.7-zip.org/"
pattern = "^7z(?P<version>(?P<major>\\d{2})(?P<minor>\\d{2}))-x64.exe$"
parser = "sf"
project = "sevenzip"
download_urls = [
    "https://www.7-zip.org/a/7z{version}-x64.exe",
    "https://www.7-zip.org/a/7z{version}-extra.7z",
    "https://7-zip.org/a/7z{version}-linux-x64.tar.xz",
]
