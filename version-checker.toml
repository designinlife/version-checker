[app]
title = "Software version checker"

[[softwares]]
name = "almalinux"
url = "https://almalinux.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
parser = "almalinux"
split = 1
download_urls = [
    "https://mirrors.nju.edu.cn/almalinux/{version}/isos/x86_64/AlmaLinux-{version}-x86_64-minimal.iso",
]

[[softwares]]
name = "rockylinux"
url = "https://rockylinux.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
parser = "rockylinux"
download_urls = [
    "https://mirrors.nju.edu.cn/rocky/{version}/isos/x86_64/Rocky-{version}-x86_64-minimal.iso",
]
split = 1

[[softwares]]
name = "oha"
repo = "hatoo/oha"
url = "https://github.com/hatoo/oha"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/hatoo/oha/releases/download/v{version}/oha-linux-amd64#oha-{version}-linux-amd64",
    "https://github.com/hatoo/oha/releases/download/v{version}/oha-windows-amd64.exe#oha-{version}-windows-amd64.exe",
    "https://github.com/hatoo/oha/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "gns3-gui"
repo = "GNS3/gns3-gui"
url = "https://github.com/GNS3/gns3-gui"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/GNS3/gns3-gui/releases/download/v{version}/GNS3-{version}-all-in-one.exe",
    "https://github.com/GNS3/gns3-gui/releases/download/v{version}/GNS3-{version}.source.zip",
]

[[softwares]]
name = "ventoy"
repo = "ventoy/Ventoy"
url = "https://www.ventoy.net/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ventoy/Ventoy/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/ventoy/Ventoy/releases/download/v{version}/ventoy-{version}-windows.zip",
    "https://github.com/ventoy/Ventoy/releases/download/v{version}/ventoy-{version}-linux.tar.gz",
    "https://github.com/ventoy/Ventoy/releases/download/v{version}/ventoy-{version}-livecd.iso",
]

[[softwares]]
name = "fd"
repo = "sharkdp/fd"
url = "https://github.com/sharkdp/fd"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/sharkdp/fd/releases/download/v{version}/fd-musl_{version}_amd64.deb",
    "https://github.com/sharkdp/fd/releases/download/v{version}/fd-v{version}-x86_64-pc-windows-gnu.zip",
    "https://github.com/sharkdp/fd/releases/download/v{version}/fd-v{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/sharkdp/fd/releases/download/v{version}/fd-v{version}-x86_64-unknown-linux-gnu.tar.gz",
    "https://github.com/sharkdp/fd/releases/download/v{version}/fd-v{version}-x86_64-unknown-linux-musl.tar.gz",
    "https://github.com/sharkdp/fd/releases/download/v{version}/fd_{version}_amd64.deb",
    "https://github.com/sharkdp/fd/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "bat"
repo = "sharkdp/bat"
url = "https://github.com/sharkdp/bat"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/sharkdp/bat/releases/download/v{version}/bat-v{version}-x86_64-pc-windows-gnu.zip",
    "https://github.com/sharkdp/bat/releases/download/v{version}/bat-v{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/sharkdp/bat/releases/download/v{version}/bat-v{version}-x86_64-unknown-linux-gnu.tar.gz",
    "https://github.com/sharkdp/bat/releases/download/v{version}/bat-v{version}-x86_64-unknown-linux-musl.tar.gz",
    "https://github.com/sharkdp/bat/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "darktable"
repo = "darktable-org/darktable"
url = "https://github.com/darktable-org/darktable"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/darktable-org/darktable/releases/download/release-{version}/darktable-{version}-win64.exe",
]

[[softwares]]
name = "cat-catch"
repo = "xifangczy/cat-catch"
url = "https://github.com/xifangczy/cat-catch"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/xifangczy/cat-catch/releases/download/{version}/cat-catch-{version}-chrome.crx",
    "https://github.com/xifangczy/cat-catch/releases/download/{version}/cat-catch-{version}-edge.crx",
    "https://github.com/xifangczy/cat-catch/releases/download/{version}/cat-catch-{version}-firefox.xpi",
    "https://github.com/xifangczy/cat-catch/releases/download/{version}/cat-catch-{version}.crx",
    "https://github.com/xifangczy/cat-catch/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "libxcrypt"
repo = "besser82/libxcrypt"
url = "https://github.com/besser82/libxcrypt"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/besser82/libxcrypt/releases/download/v{version}/libxcrypt-{version}.tar.xz",
    "https://github.com/besser82/libxcrypt/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "czkawka"
repo = "qarmin/czkawka"
url = "https://github.com/qarmin/czkawka"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/qarmin/czkawka/releases/download/{version}/linux_czkawka_cli#linux_czkawka_cli-{version}",
    "https://github.com/qarmin/czkawka/releases/download/{version}/linux_czkawka_cli_static_eyra#linux_czkawka_cli_static_eyra-{version}",
    "https://github.com/qarmin/czkawka/releases/download/{version}/windows_czkawka_cli.exe#windows_czkawka_cli-{version}.exe",
    "https://github.com/qarmin/czkawka/releases/download/{version}/windows_czkawka_gui_410.zip#windows_czkawka_gui_410-{version}.zip",
    "https://github.com/qarmin/czkawka/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "cherry-studio"
repo = "CherryHQ/cherry-studio"
url = "https://github.com/CherryHQ/cherry-studio"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/CherryHQ/cherry-studio/releases/download/v{version}/Cherry-Studio-{version}-portable.exe",
    "https://github.com/CherryHQ/cherry-studio/releases/download/v{version}/Cherry-Studio-{version}-setup.exe",
    "https://github.com/CherryHQ/cherry-studio/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "reqable-app"
repo = "reqable/reqable-app"
url = "https://github.com/reqable/reqable-app"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/reqable/reqable-app/releases/download/{version}/reqable-app-windows-x86_64.zip#reqable-app-{version}-windows-x86_64.zip",
    "https://github.com/reqable/reqable-app/releases/download/{version}/reqable-app-windows-x86_64.exe#reqable-app-{version}-windows-x86_64.exe",
    "https://github.com/reqable/reqable-app/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "rustdesk"
repo = "rustdesk/rustdesk"
url = "https://github.com/rustdesk/rustdesk"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-x86_64.msi",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-x86_64.deb",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-x86_64.dmg",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-universal-signed.apk",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-aarch64-signed.apk",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-armv7-signed.apk",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-x86_64.flatpak",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-aarch64.flatpak",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-0.x86_64.rpm",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-0-x86_64.pkg.tar.zst",
    "https://github.com/rustdesk/rustdesk/releases/download/{version}/rustdesk-{version}-unsigned.tar.gz",
    "https://github.com/rustdesk/rustdesk/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "Windows.Terminal"
repo = "microsoft/terminal"
url = "https://github.com/microsoft/terminal"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
release = true
assets = true

[[softwares]]
name = "PowerShell"
repo = "PowerShell/PowerShell"
url = "https://learn.microsoft.com/en-us/powershell/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/PowerShell/PowerShell/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/PowerShell/PowerShell/releases/download/v{version}/PowerShell-{version}-win-x64.msi",
    "https://github.com/PowerShell/PowerShell/releases/download/v{version}/PowerShell-{version}-win-x64.zip",
]

[[softwares]]
name = "gitextensions"
repo = "gitextensions/gitextensions"
url = "https://github.com/gitextensions/gitextensions"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
assets = true

[[softwares]]
name = "Sarasa-Gothic"
repo = "be5invis/Sarasa-Gothic"
url = "https://github.com/be5invis/Sarasa-Gothic"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaFixedSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaFixedSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaFixedSlabSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaFixedSlabSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaGothicSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaGothicSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaMonoSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaMonoSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaMonoSlabSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaMonoSlabSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaTermSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaTermSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaTermSlabSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaTermSlabSC-TTF-Unhinted-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaUiSC-TTF-{version}.7z",
    "https://github.com/be5invis/Sarasa-Gothic/releases/download/v{version}/SarasaUiSC-TTF-Unhinted-{version}.7z",
]

[[softwares]]
name = "maple-font"
repo = "subframe7536/maple-font"
url = "https://github.com/subframe7536/maple-font"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/subframe7536/maple-font/releases/download/v{version}/MapleMono-NF-CN-unhinted.zip#MapleMono-{version}-NF-CN-unhinted.zip",
    "https://github.com/subframe7536/maple-font/releases/download/v{version}/MapleMono-NF-CN.zip#MapleMono-{version}-NF-CN.zip",
]

[[softwares]]
name = "mydumper"
repo = "mydumper/mydumper"
url = "https://github.com/mydumper/mydumper"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\-?([0-9]+)?)$"
release = true
download_urls = [
    "https://github.com/mydumper/mydumper/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/mydumper/mydumper/releases/download/v{version}/mydumper-{version}.el8.x86_64.rpm",
    "https://github.com/mydumper/mydumper/releases/download/v{version}/mydumper-{version}.el9.x86_64.rpm",
]

[[softwares]]
name = "HeidiSQL"
repo = "HeidiSQL/HeidiSQL"
url = "https://www.heidisql.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://www.heidisql.com/downloads/releases/HeidiSQL_{version}_64_Portable.zip",
]

[[softwares]]
name = "Navicat"
url = "https://www.navicat.com/"
pattern = "^Navicat Premium \\(Windows\\) version (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "navicat"
download_urls = [
    "https://dn.navicat.com/download/navicat{major}{minor}_premium_cs_x64.exe#navicat_premium_cs_x64_v{version}.exe",
]

[[softwares]]
name = "beekeeper-studio"
repo = "beekeeper-studio/beekeeper-studio"
url = "https://github.com/beekeeper-studio/beekeeper-studio"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/beekeeper-studio/beekeeper-studio/releases/download/v{version}/Beekeeper-Studio-{version}-portable.exe",
]

[[softwares]]
name = "duckdb"
repo = "duckdb/duckdb"
url = "https://duckdb.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/duckdb/duckdb/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/duckdb/duckdb/releases/download/v{version}/duckdb_cli-linux-amd64.zip#duckdb_cli-{version}-linux-amd64.zip",
    "https://github.com/duckdb/duckdb/releases/download/v{version}/duckdb_cli-windows-amd64.zip#duckdb_cli-{version}-windows-amd64.zip",
    "https://github.com/duckdb/duckdb/releases/download/v{version}/libduckdb-linux-amd64.zip#libduckdb-{version}-linux-amd64.zip",
    "https://github.com/duckdb/duckdb/releases/download/v{version}/libduckdb-windows-amd64.zip#libduckdb-{version}-windows-amd64.zip",
]

[[softwares]]
name = "mixxx"
repo = "mixxxdj/mixxx"
url = "https://github.com/mixxxdj/mixxx"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://downloads.mixxx.org/releases/{version}/mixxx-{version}-win64.msi",
]

[[softwares]]
name = "keepassxc"
repo = "keepassxreboot/keepassxc"
url = "https://github.com/keepassxreboot/keepassxc"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/keepassxreboot/keepassxc/releases/download/{version}/keepassxc-{version}-src.tar.xz",
    "https://github.com/keepassxreboot/keepassxc/releases/download/{version}/KeePassXC-{version}-Win64.msi",
    "https://github.com/keepassxreboot/keepassxc/releases/download/{version}/KeePassXC-{version}-Win64.zip",
]

[[softwares]]
name = "SwitchHosts"
repo = "oldj/SwitchHosts"
url = "https://github.com/oldj/SwitchHosts"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
assets = true
assets_patterns = [
    "^(.+)(win|windows)(.*).(zip|exe)$",
]

[[softwares]]
name = "git"
repo = "git/git"
url = "https://git-scm.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://kernel.org/pub/software/scm/git/git-{version}.tar.gz",
    "https://kernel.org/pub/software/scm/git/git-htmldocs-{version}.tar.gz",
    "https://kernel.org/pub/software/scm/git/git-manpages-{version}.tar.gz",
]

[[softwares]]
name = "git-for-windows"
repo = "git-for-windows/git"
url = "https://gitforwindows.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.windows\\.(?P<build>\\d+))$"
release = true
assets = true
assets_patterns = [
    "Git-\\d+\\.\\d+\\.\\d+(\\.\\d+)?-64-bit.exe",
    "PortableGit-\\d+\\.\\d+\\.\\d+(\\.\\d+)?-64-bit.7z.exe",
]

[[softwares]]
name = "tailscale"
repo = "tailscale/tailscale"
url = "https://github.com/tailscale/tailscale"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://pkgs.tailscale.com/stable/tailscale_{version}_amd64.tgz",
    "https://pkgs.tailscale.com/stable/tailscale-setup-{version}-amd64.msi",
    "https://github.com/tailscale/tailscale/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "headscale"
repo = "juanfont/headscale"
url = "https://github.com/juanfont/headscale"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/juanfont/headscale/releases/download/v{version}/headscale_{version}_linux_amd64",
    "https://github.com/juanfont/headscale/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "beanstalkd"
repo = "beanstalkd/beanstalkd"
url = "https://beanstalkd.github.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
download_urls = [
    "https://github.com/beanstalkd/beanstalkd/archive/v{version}.tar.gz",
]

[[softwares]]
name = "bun"
repo = "oven-sh/bun"
url = "https://bun.sh/"
pattern = "^bun-v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/oven-sh/bun/archive/refs/tags/bun-v{version}.tar.gz",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-linux-x64-baseline-profile.zip#bun-linux-x64-baseline-profile-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-linux-x64-baseline.zip#bun-linux-x64-baseline-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-linux-x64-profile.zip#bun-linux-x64-profile-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-linux-x64.zip#bun-linux-x64-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-windows-x64-baseline-profile.zip#bun-windows-x64-baseline-profile-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-windows-x64-baseline.zip#bun-windows-x64-baseline-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-windows-x64-profile.zip#bun-windows-x64-profile-v{version}.zip",
    "https://github.com/oven-sh/bun/releases/download/bun-v{version}/bun-windows-x64.zip#bun-windows-x64-v{version}.zip",
]

[[softwares]]
name = "nodejs"
repo = "nodejs/node"
url = "https://nodejs.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 1
download_urls = [
    "https://nodejs.org/dist/v{version}/node-v{version}-x64.msi",
]

[[softwares]]
name = "go"
url = "https://go.dev/"
parser = "go"
pattern = "^go(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://go.dev/dl/go{version}.src.tar.gz",
    "https://go.dev/dl/go{version}.linux-amd64.tar.gz",
    "https://go.dev/dl/go{version}.windows-amd64.zip",
    "https://go.dev/dl/go{version}.windows-amd64.msi",
]

[[softwares]]
name = "openssl"
repo = "openssl/openssl"
url = "https://www.openssl.org/"
pattern = "^(?:openssl-|OpenSSL_)(?P<version>(?P<major>\\d+)[_.](?P<minor>\\d+)[_.](?P<patch>(?P<number>\\d+))(?P<letter>[a-z]?))$"
release = true
split = 2
download_dynamic = true

[[softwares]]
name = "sqlite"
repo = "sqlite/sqlite"
url = "https://www.sqlite.org/"
pattern = "^version-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_dynamic = true

[[softwares]]
name = "qdrant"
repo = "qdrant/qdrant"
url = "https://github.com/qdrant/qdrant"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/qdrant/qdrant/releases/download/v{version}/qdrant-x86_64-pc-windows-msvc.zip#qdrant-v{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/qdrant/qdrant/releases/download/v{version}/qdrant-x86_64-unknown-linux-gnu.tar.gz#qdrant-v{version}-x86_64-unknown-linux-gnu.tar.gz",
    "https://github.com/qdrant/qdrant/releases/download/v{version}/qdrant-x86_64-unknown-linux-musl.tar.gz#qdrant-v{version}-x86_64-unknown-linux-musl.tar.gz",
    "https://github.com/qdrant/qdrant/releases/download/v{version}/qdrant_{version}-1_amd64.deb",
    "https://github.com/qdrant/qdrant/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "dapr"
repo = "dapr/dapr"
url = "https://github.com/dapr/dapr"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/dapr/dapr/releases/download/v{version}/daprd_linux_amd64-stablecomponents.tar.gz#v{version}|daprd_linux_amd64-stablecomponents.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/daprd_linux_amd64.tar.gz#v{version}|daprd_linux_amd64.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/daprd_windows_amd64.zip#v{version}|daprd_windows_amd64.zip",
    "https://github.com/dapr/dapr/releases/download/v{version}/grafana-actor-dashboard.json#v{version}|grafana-actor-dashboard.json",
    "https://github.com/dapr/dapr/releases/download/v{version}/grafana-sidecar-dashboard.json#v{version}|grafana-sidecar-dashboard.json",
    "https://github.com/dapr/dapr/releases/download/v{version}/grafana-system-services-dashboard.json#v{version}|grafana-system-services-dashboard.json",
    "https://github.com/dapr/dapr/releases/download/v{version}/grafana-system-services-dashboard.json#v{version}|grafana-system-services-dashboard.json",
    "https://github.com/dapr/dapr/releases/download/v{version}/injector_linux_amd64.tar.gz#v{version}|injector_linux_amd64.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/injector_windows_amd64.zip#v{version}|injector_windows_amd64.zip",
    "https://github.com/dapr/dapr/releases/download/v{version}/operator_linux_amd64.tar.gz#v{version}|operator_linux_amd64.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/operator_windows_amd64.zip#v{version}|operator_windows_amd64.zip",
    "https://github.com/dapr/dapr/releases/download/v{version}/placement_linux_amd64.tar.gz#v{version}|placement_linux_amd64.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/placement_windows_amd64.zip#v{version}|placement_windows_amd64.zip",
    "https://github.com/dapr/dapr/releases/download/v{version}/scheduler_linux_amd64.tar.gz#v{version}|scheduler_linux_amd64.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/scheduler_windows_amd64.zip#v{version}|scheduler_windows_amd64.zip",
    "https://github.com/dapr/dapr/releases/download/v{version}/sentry_linux_amd64.tar.gz#v{version}|sentry_linux_amd64.tar.gz",
    "https://github.com/dapr/dapr/releases/download/v{version}/sentry_windows_amd64.zip#v{version}|sentry_windows_amd64.zip",
    "https://github.com/dapr/dapr/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "SpacetimeDB"
repo = "clockworklabs/SpacetimeDB"
url = "https://github.com/clockworklabs/SpacetimeDB"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/clockworklabs/SpacetimeDB/releases/download/v{version}/spacetime-x86_64-pc-windows-msvc.zip#spacetime-v{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/clockworklabs/SpacetimeDB/releases/download/v{version}/spacetime-x86_64-unknown-linux-gnu.tar.gz#spacetime-v{version}-x86_64-unknown-linux-gnu.tar.gz",
    "https://github.com/clockworklabs/SpacetimeDB/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "greptimedb"
repo = "GreptimeTeam/greptimedb"
url = "https://github.com/GreptimeTeam/greptimedb"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/GreptimeTeam/greptimedb/releases/download/v{version}/greptime-linux-amd64-v{version}.tar.gz",
    "https://github.com/GreptimeTeam/greptimedb/releases/download/v{version}/greptime-windows-amd64-v{version}.tar.gz",
    "https://github.com/GreptimeTeam/greptimedb/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "swoole"
repo = "swoole/swoole-src"
url = "https://www.swoole.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://pecl.php.net/get/swoole-{version}.tgz",
]

[[softwares]]
name = "grpc"
repo = "grpc/grpc"
url = "https://grpc.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://pecl.php.net/get/grpc-{version}.tgz",
]

[[softwares]]
name = "protobuf"
repo = "protocolbuffers/protobuf"
url = "https://protobuf.dev/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protoc-{version}-win64.zip",
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protoc-{version}-linux-x86_64.zip",
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protobuf-{version}.zip",
    "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protobuf-{version}.tar.gz",
]

[[softwares]]
name = "obsidian"
repo = "obsidianmd/obsidian-releases"
url = "https://github.com/obsidianmd/obsidian-releases"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/obsidianmd/obsidian-releases/releases/download/v{version}/Obsidian-{version}.apk",
    "https://github.com/obsidianmd/obsidian-releases/releases/download/v{version}/Obsidian-{version}.exe",
    "https://github.com/obsidianmd/obsidian-releases/releases/download/v{version}/obsidian_{version}_amd64.deb",
]

[[softwares]]
name = "windhawk"
repo = "ramensoftware/windhawk"
url = "https://github.com/ramensoftware/windhawk"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/ramensoftware/windhawk/releases/download/v{version}/windhawk_setup_offline.exe#windhawk-v{version}_setup_offline.exe",
]

[[softwares]]
name = "fossil-scm"
repo = "drhsqlite/fossil-mirror"
url = "https://fossil-scm.org/"
pattern = "^version-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
download_urls = [
    "https://fossil-scm.org/home/uv/fossil-linux-x64-{version}.tar.gz",
    "https://fossil-scm.org/home/uv/fossil-w64-{version}.zip",
]

[[softwares]]
name = "gitea"
repo = "go-gitea/gitea"
url = "https://github.com/go-gitea/gitea"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/go-gitea/gitea/releases/download/v{version}/gitea-{version}-gogit-windows-4.0-amd64.exe",
    "https://github.com/go-gitea/gitea/releases/download/v{version}/gitea-{version}-linux-amd64",
    "https://github.com/go-gitea/gitea/releases/download/v{version}/gitea-{version}-windows-4.0-amd64.exe",
    "https://github.com/go-gitea/gitea/releases/download/v{version}/gitea-src-{version}.tar.gz",
]

[[softwares]]
name = "forgejo"
repo = "forgejo/forgejo"
url = "https://forgejo.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = 'codeberg'
release = true
download_urls = [
    "https://codeberg.org/forgejo/forgejo/releases/download/v{version}/forgejo-{version}-linux-amd64.xz",
    "https://codeberg.org/forgejo/forgejo/releases/download/v{version}/forgejo-src-{version}.tar.gz",
]

[[softwares]]
name = "forgejo-runner"
repo = "forgejo/runner"
url = "https://forgejo.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = 'codeberg'
host = 'code.forgejo.org'
release = true
download_urls = [
    "https://code.forgejo.org/forgejo/runner/releases/download/v{version}/forgejo-runner-{version}-linux-amd64",
    "https://code.forgejo.org/forgejo/runner/releases/download/v{version}/forgejo-runner-{version}-linux-amd64.xz",
    "https://code.forgejo.org/forgejo/runner/releases/download/v{version}/forgejo-runner-{version}-linux-arm64.xz",
]

[[softwares]]
name = "localsend"
repo = "localsend/localsend"
url = "https://github.com/localsend/localsend"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-android-arm64v8.apk",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-android-arm32v7.apk",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-android-google-play.apk",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-android-x64.apk",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-linux-x86-64.deb",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-linux-x86-64.tar.gz",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-windows-x86-64.zip",
    "https://github.com/localsend/localsend/releases/download/v{version}/LocalSend-{version}-windows-x86-64.exe",
    "https://github.com/localsend/localsend/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "btop"
repo = "aristocratos/btop"
url = "https://github.com/aristocratos/btop"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/aristocratos/btop/releases/download/v{version}/btop-x86_64-linux-musl.tbz#btop-v{version}-x86_64-linux-musl.tbz",
    "https://github.com/aristocratos/btop/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "harbor"
repo = "goharbor/harbor"
url = "https://goharbor.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/goharbor/harbor/releases/download/v{version}/harbor-online-installer-v{version}.tgz",
]

[[softwares]]
name = "docker"
repo = "moby/moby"
url = "https://github.com/moby/moby"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://download.docker.com/linux/static/stable/x86_64/docker-{version}.tgz#docker-linux-static-{version}.tgz",
    "https://download.docker.com/linux/static/stable/x86_64/docker-rootless-extras-{version}.tgz#docker-rootless-extras-linux-static-{version}.tgz",
    "https://download.docker.com/win/static/stable/x86_64/docker-{version}.zip#docker-win64-static-{version}.zip",
    "https://github.com/moby/moby/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "docker-compose"
repo = "docker/compose"
url = "https://docs.docker.com/compose/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/docker/compose/releases/download/v{version}/docker-compose-linux-x86_64#docker-compose-v{version}-linux-x86_64"
]

[[softwares]]
name = "go-md2man"
repo = "cpuguy83/go-md2man"
url = "https://github.com/cpuguy83/go-md2man"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/cpuguy83/go-md2man/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "conmon"
repo = "containers/conmon"
url = "https://github.com/containers/conmon"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/conmon/releases/download/v{version}/conmon.amd64#conmon-{version}.amd64",
    "https://github.com/containers/conmon/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "runc"
repo = "opencontainers/runc"
url = "https://github.com/opencontainers/runc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/opencontainers/runc/releases/download/v{version}/runc.amd64#runc-{version}.amd64",
    "https://github.com/opencontainers/runc/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "bubblewrap"
repo = "containers/bubblewrap"
url = "https://github.com/containers/bubblewrap"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/bubblewrap/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/containers/bubblewrap/releases/download/v{version}/bubblewrap-{version}.tar.xz",
]

[[softwares]]
name = "cloudberrydb"
repo = "cloudberrydb/cloudberrydb"
url = "https://github.com/cloudberrydb/cloudberrydb"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
assets = true

[[softwares]]
name = "containers-common"
repo = "containers/common"
url = "https://github.com/containers/common"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/common/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "crun"
repo = "containers/crun"
url = "https://github.com/containers/crun"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/containers/crun/releases/download/{version}/crun-{version}-linux-amd64",
    "https://github.com/containers/crun/releases/download/{version}/crun-{version}-linux-amd64-disable-systemd",
    "https://github.com/containers/crun/releases/download/{version}/crun-{version}.tar.gz",
]

[[softwares]]
name = "youki"
repo = "containers/youki"
url = "https://containers.github.io/youki/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/youki/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/containers/youki/releases/download/v{version}/youki-{version}-x86_64-gnu.tar.gz",
    "https://github.com/containers/youki/releases/download/v{version}/youki-{version}-x86_64-musl.tar.gz",
]

[[softwares]]
name = "netavark"
repo = "containers/netavark"
url = "https://github.com/containers/netavark"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/netavark/releases/download/v{version}/netavark-v{version}-vendor.tar.gz",
    "https://github.com/containers/netavark/releases/download/v{version}/netavark.gz",
    "https://github.com/containers/netavark/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "buildah"
repo = "containers/buildah"
url = "https://buildah.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/buildah/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "bootc"
repo = "containers/bootc"
url = "https://github.com/containers/bootc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/bootc/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/containers/bootc/releases/download/v{version}/bootc-{version}-vendor.tar.zstd",
    "https://github.com/containers/bootc/releases/download/v{version}/bootc-{version}.tar.zstd",
]

[[softwares]]
name = "skopeo"
repo = "containers/skopeo"
url = "https://github.com/containers/skopeo"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/skopeo/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "podman"
repo = "containers/podman"
url = "https://podman.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/podman/releases/download/v{version}/podman-{version}-setup.exe",
    "https://github.com/containers/podman/releases/download/v{version}/podman-remote-release-windows_amd64.zip#podman-remote-{version}-release-windows_amd64.zip",
    "https://github.com/containers/podman/releases/download/v{version}/podman-remote-static-linux_amd64.tar.gz#podman-remote-{version}-static-linux_amd64.tar.gz",
    "https://github.com/containers/podman/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "podman-static"
repo = "mgoltzsche/podman-static"
url = "https://github.com/mgoltzsche/podman-static"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/mgoltzsche/podman-static/releases/download/v{version}/podman-linux-amd64.tar.gz#podman-v{version}-linux-amd64.tar.gz",
    "https://github.com/mgoltzsche/podman-static/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "podman-desktop"
repo = "containers/podman-desktop"
url = "https://podman-desktop.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
latest = true
download_urls = [
    "https://github.com/containers/podman-desktop/releases/download/v{version}/podman-desktop-{version}-setup-x64.exe",
    "https://github.com/containers/podman-desktop/releases/download/v{version}/podman-desktop-{version}-x64.exe",
    "https://github.com/containers/podman-desktop/releases/download/v{version}/podman-desktop-airgap-{version}-setup-x64.exe",
]

[[softwares]]
name = "podman-machine-wsl-os"
repo = "containers/podman-machine-wsl-os"
url = "https://github.com/containers/podman-machine-wsl-os"
pattern = "^v(?P<version>(?P<major>\\d{4})(?P<minor>\\d{2})(?P<patch>\\d+))$"
release = true
assets = true
download_dynamic = true

[[softwares]]
name = "dnsname"
repo = "containers/dnsname"
url = "https://github.com/containers/dnsname"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/containers/dnsname/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "catatonit"
repo = "openSUSE/catatonit"
url = "https://github.com/openSUSE/catatonit"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/openSUSE/catatonit/releases/download/v{version}/catatonit.x86_64#catatonit-{version}.x86_64",
    "https://github.com/openSUSE/catatonit/releases/download/v{version}/catatonit.tar.xz#catatonit-{version}.tar.xz",
    "https://github.com/openSUSE/catatonit/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "graalvm-ce-builds"
repo = "graalvm/graalvm-ce-builds"
url = "https://www.graalvm.org/"
pattern = "^jdk-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 1
download_urls = [
    "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-{version}/graalvm-community-jdk-{version}_linux-x64_bin.tar.gz",
    "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-{version}/graalvm-community-jdk-{version}_windows-x64_bin.zip",
]

[[softwares]]
name = "libssh2"
repo = "libssh2/libssh2"
url = "https://github.com/libssh2/libssh2"
pattern = "^libssh2-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libssh2/libssh2/releases/download/libssh2-{version}/libssh2-{version}.tar.bz2",
    "https://github.com/libssh2/libssh2/releases/download/libssh2-{version}/libssh2-{version}.tar.gz",
    "https://github.com/libssh2/libssh2/releases/download/libssh2-{version}/libssh2-{version}.tar.xz",
    "https://github.com/libssh2/libssh2/releases/download/libssh2-{version}/libssh2-{version}.zip",
]

[[softwares]]
name = "libbpf"
repo = "libbpf/libbpf"
url = "https://github.com/libbpf/libbpf"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libbpf/libbpf/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "nghttp2"
repo = "nghttp2/nghttp2"
url = "https://github.com/nghttp2/nghttp2"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/nghttp2/nghttp2/releases/download/v{version}/nghttp2-{version}.tar.bz2",
    "https://github.com/nghttp2/nghttp2/releases/download/v{version}/nghttp2-{version}.tar.gz",
    "https://github.com/nghttp2/nghttp2/releases/download/v{version}/nghttp2-{version}.tar.xz",
]

[[softwares]]
name = "nghttp3"
repo = "ngtcp2/nghttp3"
url = "https://github.com/ngtcp2/nghttp3"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ngtcp2/nghttp3/releases/download/v{version}/nghttp3-{version}.tar.bz2",
    "https://github.com/ngtcp2/nghttp3/releases/download/v{version}/nghttp3-{version}.tar.gz",
    "https://github.com/ngtcp2/nghttp3/releases/download/v{version}/nghttp3-{version}.tar.xz",
]

[[softwares]]
name = "ngtcp2"
repo = "ngtcp2/ngtcp2"
url = "https://github.com/ngtcp2/ngtcp2"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ngtcp2/ngtcp2/releases/download/v{version}/ngtcp2-{version}.tar.gz",
    "https://github.com/ngtcp2/ngtcp2/releases/download/v{version}/ngtcp2-{version}.tar.bz2",
    "https://github.com/ngtcp2/ngtcp2/releases/download/v{version}/ngtcp2-{version}.tar.xz",
]

[[softwares]]
name = "ninja"
repo = "ninja-build/ninja"
url = "https://github.com/ninja-build/ninja"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ninja-build/ninja/releases/download/v{version}/ninja-linux.zip#ninja-{version}-linux.zip",
    "https://github.com/ninja-build/ninja/releases/download/v{version}/ninja-win.zip#ninja-{version}-win.zip",
    "https://github.com/ninja-build/ninja/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "wolfssl"
repo = "wolfSSL/wolfssl"
url = "https://github.com/wolfSSL/wolfssl"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))-stable$"
release = true
download_urls = [
    "https://github.com/wolfSSL/wolfssl/archive/refs/tags/v{version}-stable.tar.gz",
]

[[softwares]]
name = "openssl-quic"
repo = "quictls/openssl"
url = "https://github.com/quictls/openssl"
pattern = "^openssl-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))-quic[\\d+]$"
release = true
split = 2
download_urls = [
    "https://github.com/quictls/openssl/archive/refs/tags/openssl-{version}-quic1.tar.gz",
]

[[softwares]]
name = "libressl"
url = "https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/"
pattern = "^libressl-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)).tar.gz$"
parser = "index"
download_urls = [
    "https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-{version}.tar.gz",
    "https://github.com/libressl/portable/releases/download/v{version}/libressl_v{version}_windows_x64.zip",
]

[[softwares]]
name = "openldap"
url = "https://www.openldap.org/software/download/OpenLDAP/openldap-release/"
pattern = "^openldap-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)).tgz$"
parser = "index"
split = 2
download_urls = [
    "https://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-{version}.tgz",
]

[[softwares]]
name = "tcpdump"
url = "https://www.tcpdump.org/release/"
pattern = "^tcpdump-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)).tar.gz$"
parser = "index"
download_urls = [
    "https://www.tcpdump.org/release/tcpdump-{version}.tar.gz",
]

[[softwares]]
name = "tcpslice"
url = "https://www.tcpdump.org/release/"
pattern = "^tcpslice-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?).tar.gz$"
parser = "index"
download_urls = [
    "https://www.tcpdump.org/release/tcpslice-{version}.tar.gz",
]

[[softwares]]
name = "libpcap"
url = "https://www.tcpdump.org/release/"
pattern = "^libpcap-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)).tar.gz$"
parser = "index"
download_urls = [
    "https://www.tcpdump.org/release/libpcap-{version}.tar.gz",
]

[[softwares]]
name = "fontconfig"
url = "https://www.freedesktop.org/software/fontconfig/release/"
pattern = "^fontconfig-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)).tar.gz$"
parser = "index"
download_urls = [
    "https://www.freedesktop.org/software/fontconfig/release/fontconfig-{version}.tar.gz",
]

[[softwares]]
name = "proxypin"
repo = "wanghongenpin/proxypin"
url = "https://github.com/wanghongenpin/proxypin"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/wanghongenpin/proxypin/releases/download/v{version}/ProxyPin-Android-arm64.apk#ProxyPin-v{version}-Android-arm64.apk",
    "https://github.com/wanghongenpin/proxypin/releases/download/v{version}/ProxyPin-Android.apk#ProxyPin-v{version}-Android.apk",
    "https://github.com/wanghongenpin/proxypin/releases/download/v{version}/ProxyPin-Linux.deb#ProxyPin-v{version}-Linux.deb",
    "https://github.com/wanghongenpin/proxypin/releases/download/v{version}/ProxyPin-Mac.zip#ProxyPin-v{version}-Mac.zip",
    "https://github.com/wanghongenpin/proxypin/releases/download/v{version}/ProxyPin-Windows.zip#ProxyPin-v{version}-Windows.zip",
    "https://github.com/wanghongenpin/proxypin/releases/download/v{version}/ProxyPin-Windows7_x64.zip#ProxyPin-v{version}-Windows7_x64.zip",
    "https://github.com/wanghongenpin/proxypin/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "vmr"
repo = "gvcgo/version-manager"
url = "https://github.com/gvcgo/version-manager"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/gvcgo/version-manager/releases/download/v{version}/vmr_linux-amd64.zip#vmr-{version}_linux-amd64.zip",
    "https://github.com/gvcgo/version-manager/releases/download/v{version}/vmr_windows-amd64.zip#vmr-{version}_windows-amd64.zip",
    "https://github.com/gvcgo/version-manager/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "dufs"
repo = "sigoden/dufs"
url = "https://github.com/sigoden/dufs"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/sigoden/dufs/releases/download/v{version}/dufs-v{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/sigoden/dufs/releases/download/v{version}/dufs-v{version}-x86_64-unknown-linux-musl.tar.gz",
    "https://github.com/sigoden/dufs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "ChatBox"
repo = "AIDotNet/ChatBox"
url = "https://github.com/AIDotNet/ChatBox"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/AIDotNet/ChatBox/releases/download/{version}/win-64-framework.exe#ChatBox-v{version}-win-64-framework.exe",
    "https://github.com/AIDotNet/ChatBox/releases/download/{version}/win-64.exe#ChatBox-v{version}-win-64.exe",
    "https://github.com/AIDotNet/ChatBox/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "pngquant"
url = "https://pngquant.org/releases.html"
pattern = "^pngquant-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))-src.tar.gz$"
parser = "index"
download_urls = [
    "https://pngquant.org/pngquant-{version}-src.tar.gz",
]

[[softwares]]
name = "due"
repo = "dobyte/due"
url = "https://github.com/dobyte/due"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/dobyte/due/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/dobyte/due/archive/refs/tags/v{version}.zip",
]

[[softwares]]
name = "keystore-explorer"
repo = "kaikramer/keystore-explorer"
url = "https://github.com/kaikramer/keystore-explorer"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/kaikramer/keystore-explorer/releases/download/v{version}/kse-{major}{minor}{patch}-setup-no-jre.exe",
    "https://github.com/kaikramer/keystore-explorer/releases/download/v{version}/kse-{major}{minor}{patch}.zip",
]

[[softwares]]
name = "ab-download-manager"
repo = "amir1376/ab-download-manager"
url = "https://github.com/amir1376/ab-download-manager"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/amir1376/ab-download-manager/releases/download/v{version}/ABDownloadManager_{version}_linux_x64.deb",
    "https://github.com/amir1376/ab-download-manager/releases/download/v{version}/ABDownloadManager_{version}_linux_x64.tar.gz",
    "https://github.com/amir1376/ab-download-manager/releases/download/v{version}/ABDownloadManager_{version}_windows_x64.exe",
    "https://github.com/amir1376/ab-download-manager/releases/download/v{version}/ABDownloadManager_{version}_windows_x64.zip",
    "https://github.com/amir1376/ab-download-manager/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libexpat"
repo = "libexpat/libexpat"
url = "https://github.com/libexpat/libexpat"
pattern = "^R_(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libexpat/libexpat/releases/download/R_{major}_{minor}_{patch}/expat-{major}.{minor}.{patch}.tar.bz2",
    "https://github.com/libexpat/libexpat/releases/download/R_{major}_{minor}_{patch}/expat-{major}.{minor}.{patch}.tar.gz",
    "https://github.com/libexpat/libexpat/releases/download/R_{major}_{minor}_{patch}/expat-{major}.{minor}.{patch}.tar.lz",
    "https://github.com/libexpat/libexpat/releases/download/R_{major}_{minor}_{patch}/expat-{major}.{minor}.{patch}.tar.xz",
    "https://github.com/libexpat/libexpat/releases/download/R_{major}_{minor}_{patch}/expat-win32bin-{major}.{minor}.{patch}.exe",
    "https://github.com/libexpat/libexpat/releases/download/R_{major}_{minor}_{patch}/expat-win32bin-{major}.{minor}.{patch}.zip",
]

[[softwares]]
name = "xz"
repo = "tukaani-project/xz"
url = "https://github.com/tukaani-project/xz"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/tukaani-project/xz/releases/download/v{version}/xz-{version}.tar.bz2",
    "https://github.com/tukaani-project/xz/releases/download/v{version}/xz-{version}.tar.gz",
    "https://github.com/tukaani-project/xz/releases/download/v{version}/xz-{version}.tar.xz",
]

[[softwares]]
name = "c-ares"
repo = "c-ares/c-ares"
url = "https://github.com/c-ares/c-ares"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/c-ares/c-ares/releases/download/v{version}/c-ares-{version}.tar.gz",
]

[[softwares]]
name = "jansson"
repo = "akheron/jansson"
url = "https://github.com/akheron/jansson"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/akheron/jansson/releases/download/v{version}/jansson-{version}.tar.bz2",
    "https://github.com/akheron/jansson/releases/download/v{version}/jansson-{version}.tar.gz",
]

[[softwares]]
name = "brotli"
repo = "google/brotli"
url = "https://github.com/google/brotli"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/google/brotli/releases/download/v{version}/brotli-x64-windows-dynamic.zip#brotli-v{version}-x64-windows-dynamic.zip",
    "https://github.com/google/brotli/releases/download/v{version}/brotli-x64-windows-static.zip#brotli-v{version}-x64-windows-static.zip",
    "https://github.com/google/brotli/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "xxhash"
repo = "Cyan4973/xxHash"
url = "https://github.com/Cyan4973/xxHash"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/Cyan4973/xxHash/releases/download/v{version}/xxhsum_win64_v{major}_{minor}_{patch}.zip",
    "https://github.com/Cyan4973/xxHash/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "solon"
repo = "noear/solon"
url = "https://solon.noear.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/noear/solon/archive/refs/tags/v{version}.zip",
    "https://github.com/noear/solon/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "util-linux"
repo = "util-linux/util-linux"
url = "https://github.com/util-linux/util-linux"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/util-linux/util-linux/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libjxl"
repo = "libjxl/libjxl"
url = "https://github.com/libjxl/libjxl"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libjxl/libjxl/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/libjxl/libjxl/releases/download/v{version}/jxl-linux-x86_64-static-v{version}.tar.gz",
    "https://github.com/libjxl/libjxl/releases/download/v{version}/jxl-x64-windows-static.zip#jxl-x64-windows-static-v{version}.zip",
    "https://github.com/libjxl/libjxl/releases/download/v{version}/jxl-x64-windows.zip#jxl-x64-windows-v{version}.zip",
]

[[softwares]]
name = "libmustache"
repo = "jbboehr/libmustache"
url = "https://github.com/jbboehr/libmustache"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/jbboehr/libmustache/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libmaxminddb"
repo = "maxmind/libmaxminddb"
url = "https://github.com/maxmind/libmaxminddb"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/maxmind/libmaxminddb/releases/download/{version}/libmaxminddb-{version}.tar.gz",
]

[[softwares]]
name = "geoipupdate"
repo = "maxmind/geoipupdate"
url = "https://dev.maxmind.com/geoip/updating-databases"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.deb",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.rpm",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_linux_amd64.tar.gz",
    "https://github.com/maxmind/geoipupdate/releases/download/v{version}/geoipupdate_{version}_windows_amd64.zip",
]

[[softwares]]
name = "zfs"
repo = "openzfs/zfs"
url = "https://openzfs.org/"
pattern = "^zfs-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/openzfs/zfs/releases/download/zfs-{version}/zfs-{version}.tar.gz",
]

[[softwares]]
name = "upx"
repo = "upx/upx"
url = "https://upx.github.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-amd64_linux.tar.xz",
    "https://github.com/upx/upx/releases/download/v{version}/upx-{version}-win64.zip",
]

[[softwares]]
name = "lz4"
repo = "lz4/lz4"
url = "https://github.com/lz4/lz4"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/lz4/lz4/releases/download/v{version}/lz4-{version}.tar.gz",
    "https://github.com/lz4/lz4/releases/download/v{version}/lz4_win64_v{major}_{minor}_{patch}.zip",
]

[[softwares]]
name = "curl"
repo = "curl/curl"
url = "https://curl.se/"
pattern = "^curl-(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
download_urls = [
    "https://curl.se/download/curl-{major}.{minor}.{patch}.tar.gz",
    "https://github.com/stunnel/static-curl/releases/download/{major}.{minor}.{patch}/curl-linux-x86_64-glibc-{major}.{minor}.{patch}.tar.xz",
    "https://github.com/stunnel/static-curl/releases/download/{major}.{minor}.{patch}/curl-linux-x86_64-musl-{major}.{minor}.{patch}.tar.xz",
    "https://github.com/stunnel/static-curl/releases/download/{major}.{minor}.{patch}/curl-windows-x86_64-{major}.{minor}.{patch}.tar.xz",
]

[[softwares]]
name = "libgd"
repo = "libgd/libgd"
url = "https://libgd.github.io/"
pattern = "^gd-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/libgd/libgd/releases/download/gd-{version}/libgd-{version}.tar.gz",
]

[[softwares]]
name = "corretto-8"
repo = "corretto/corretto-8"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+))$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-11"
repo = "corretto/corretto-11"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-17"
repo = "corretto/corretto-17"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "corretto-21"
repo = "corretto/corretto-21"
url = "https://aws.amazon.com/corretto/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<suffix>\\d+)\\.(\\d+)?)$"
release = true
download_urls = [
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-linux-x64.tar.gz",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64.msi",
    "https://corretto.aws/downloads/resources/{version}/amazon-corretto-{version}-windows-x64-jdk.zip",
]

[[softwares]]
name = "sftpgo"
repo = "drakkan/sftpgo"
url = "https://github.com/drakkan/sftpgo"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/drakkan/sftpgo/releases/download/v{version}/sftpgo-{version}-1.x86_64.rpm",
    "https://github.com/drakkan/sftpgo/releases/download/v{version}/sftpgo_{version}-1_amd64.deb",
    "https://github.com/drakkan/sftpgo/releases/download/v{version}/sftpgo_v{version}_linux_x86_64.tar.xz",
    "https://github.com/drakkan/sftpgo/releases/download/v{version}/sftpgo_v{version}_windows_x86_64.exe",
    "https://github.com/drakkan/sftpgo/releases/download/v{version}/sftpgo_v{version}_windows_portable.zip",
    "https://github.com/drakkan/sftpgo/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "codon"
repo = "exaloop/codon"
url = "https://github.com/exaloop/codon"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/exaloop/codon/releases/download/v{version}/codon-linux-x86_64.tar.gz#codon-{version}-linux-x86_64.tar.gz",
    "https://github.com/exaloop/codon/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "python"
repo = "python/cpython"
url = "https://www.python.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://www.python.org/ftp/python/{version}/Python-{version}.tgz",
    "https://www.python.org/ftp/python/{version}/Python-{version}.tar.xz",
    "https://www.python.org/ftp/python/{version}/python-{version}-amd64.exe",
]

[[softwares]]
name = "php"
url = "https://www.php.net/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "php"
major = [7, 8]
split = 2
download_urls = [
    "https://www.php.net/distributions/php-{version}.tar.gz",
]

[[softwares]]
name = "AnotherRedisDesktopManager"
repo = "qishibo/AnotherRedisDesktopManager"
url = "https://github.com/qishibo/AnotherRedisDesktopManager"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/qishibo/AnotherRedisDesktopManager/releases/download/v{version}/Another-Redis-Desktop-Manager-win-{version}-x64.zip",
    "https://github.com/qishibo/AnotherRedisDesktopManager/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "redis"
repo = "redis/redis"
url = "https://redis.io/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 2
download_urls = [
    "https://download.redis.io/releases/redis-{version}.tar.gz",
]

[[softwares]]
name = "valkey"
repo = "valkey-io/valkey"
url = "https://valkey.io/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/valkey-io/valkey/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "composer"
repo = "composer/composer"
url = "https://getcomposer.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
split = 2
download_urls = [
    "https://getcomposer.org/download/{version}/composer.phar#composer-{major}.{minor}.{patch}.phar",
]

[[softwares]]
name = "utf8proc"
repo = "JuliaStrings/utf8proc"
url = "https://github.com/JuliaStrings/utf8proc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/JuliaStrings/utf8proc/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "serf"
repo = "apache/serf"
url = "https://serf.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/serf/serf-{version}.zip",
    "https://archive.apache.org/dist/serf/serf-{version}.tar.bz2",
]

[[softwares]]
name = "subversion"
repo = "apache/subversion"
url = "https://subversion.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/subversion/subversion-{version}.tar.gz",
    "https://www.visualsvn.com/files/Apache-Subversion-{version}.zip",
]

[[softwares]]
name = "httpd"
repo = "apache/httpd"
url = "https://httpd.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/httpd/httpd-{version}.tar.gz",
]

[[softwares]]
name = "kafka"
repo = "apache/kafka"
url = "https://kafka.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://archive.apache.org/dist/kafka/{version}/kafka-{version}-src.tgz",
    "https://archive.apache.org/dist/kafka/{version}/kafka_2.12-{version}.tgz",
    "https://archive.apache.org/dist/kafka/{version}/kafka_2.13-{version}.tgz",
]

[[softwares]]
name = "doris"
repo = "apache/doris"
url = "https://doris.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?:\\.\\d+)?)$"
release = true
download_urls = [
    "https://downloads.apache.org/doris/{major}.{minor}/{major}.{minor}.{patch}/apache-doris-{major}.{minor}.{patch}-src.tar.gz",
    "https://apache-doris-releases.oss-accelerate.aliyuncs.com/apache-doris-{major}.{minor}.{patch}-bin-x64.tar.gz",
]

[[softwares]]
name = "maven"
repo = "apache/maven"
url = "https://maven.apache.org/"
pattern = "^maven-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/source/apache-maven-{version}-src.tar.gz",
    "https://dlcdn.apache.org/maven/maven-{major}/{version}/binaries/apache-maven-{version}-bin.zip",
]

[[softwares]]
name = "groovy"
repo = "apache/groovy"
url = "https://groovy-lang.org/"
pattern = "^GROOVY_(?P<version>(?P<major>\\d+)_(?P<minor>\\d+)_(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/sources/apache-groovy-src-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-binary-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-docs-{major}.{minor}.{patch}.zip",
    "https://dlcdn.apache.org/groovy/{major}.{minor}.{patch}/distribution/apache-groovy-sdk-{major}.{minor}.{patch}.zip",
    "https://groovy.jfrog.io/artifactory/dist-release-local/groovy-windows-installer/groovy-{major}.{minor}.{patch}/groovy-{major}.{minor}.{patch}.msi",
]

[[softwares]]
name = "dolphinscheduler"
repo = "apache/dolphinscheduler"
url = "https://dolphinscheduler.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://archive.apache.org/dist/dolphinscheduler/{version}/apache-dolphinscheduler-{version}-src.tar.gz",
    "https://archive.apache.org/dist/dolphinscheduler/{version}/apache-dolphinscheduler-{version}-bin.tar.gz",
]

[[softwares]]
name = "dubbo"
repo = "apache/dubbo"
url = "https://dubbo.apache.org/"
pattern = "^(dubbo-)?(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/apache/dubbo/archive/refs/tags/{version}.zip",
    "https://github.com/apache/dubbo/archive/refs/tags/dubbo-{version}.zip",
    "https://archive.apache.org/dist/dubbo/{version}/apache-dubbo-{version}-src.zip",
]

[[softwares]]
name = "druid"
repo = "apache/druid"
url = "https://druid.apache.org/"
pattern = "^druid-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://dlcdn.apache.org/druid/{version}/apache-druid-{version}-src.tar.gz",
    "https://dlcdn.apache.org/druid/{version}/apache-druid-{version}-bin.tar.gz",
]

[[softwares]]
name = "zookeeper"
repo = "apache/zookeeper"
url = "https://zookeeper.apache.org/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
split = 2
download_urls = [
    "https://archive.apache.org/dist/zookeeper/zookeeper-{version}/apache-zookeeper-{version}.tar.gz",
    "https://archive.apache.org/dist/zookeeper/zookeeper-{version}/apache-zookeeper-{version}-bin.tar.gz",
]

[[softwares]]
name = "hbase"
repo = "apache/hbase"
url = "https://hbase.apache.org/"
pattern = "^rel/(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-src.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-client-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-hadoop3-bin.tar.gz",
    "https://dlcdn.apache.org/hbase/{version}/hbase-{version}-hadoop3-client-bin.tar.gz",
]

[[softwares]]
name = "spark"
repo = "apache/spark"
url = "https://spark.apache.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/spark/spark-{version}/spark-{version}-bin-hadoop3.tgz",
    "https://dlcdn.apache.org/spark/spark-{version}/spark-{version}-bin-without-hadoop.tgz",
    "https://dlcdn.apache.org/spark/spark-{version}/spark-{version}.tgz",
    "https://dlcdn.apache.org/spark/spark-{version}/pyspark-{version}.tar.gz",
]

[[softwares]]
name = "hadoop"
repo = "apache/hadoop"
url = "https://hadoop.apache.org/"
pattern = "^rel/release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/hadoop/common/hadoop-{version}/hadoop-{version}-src.tar.gz",
    "https://dlcdn.apache.org/hadoop/common/hadoop-{version}/hadoop-{version}.tar.gz",
]
max_page = 5

[[softwares]]
name = "dinky"
repo = "DataLinkDC/dinky"
url = "https://www.dinky.org.cn/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
assets = true
download_urls = [
    "https://github.com/DataLinkDC/dinky/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "flink"
repo = "apache/flink"
url = "https://flink.apache.org/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/flink/flink-{version}/flink-{version}-src.tgz",
    "https://dlcdn.apache.org/flink/flink-{version}/flink-{version}-bin-scala_2.12.tgz",
]

[[softwares]]
name = "foundationdb"
repo = "apple/foundationdb"
url = "https://www.foundationdb.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbbackup.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbcli.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbdecode.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbmonitor.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/fdbserver.x86_64",
    "https://github.com/apple/foundationdb/releases/download/{version}/foundationdb-clients-{version}-1.el7.x86_64.rpm",
    "https://github.com/apple/foundationdb/releases/download/{version}/foundationdb-server-{version}-1.el7.x86_64.rpm",
    "https://github.com/apple/foundationdb/releases/download/{version}/libfdb_c.x86_64.so",
    "https://github.com/apple/foundationdb/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "nginx"
repo = "nginx/nginx"
url = "https://nginx.org/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://nginx.org/download/nginx-{version}.tar.gz",
]

[[softwares]]
name = "njs"
repo = "nginx/njs"
url = "https://nginx.org/en/docs/njs/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/nginx/njs/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "coredns"
repo = "coredns/coredns"
url = "https://coredns.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/coredns/coredns/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/coredns/coredns/releases/download/v{version}/coredns_{version}_linux_amd64.tgz",
    "https://github.com/coredns/coredns/releases/download/v{version}/coredns_{version}_windows_amd64.tgz",
]

[[softwares]]
name = "etcd"
repo = "etcd-io/etcd"
url = "https://etcd.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/etcd-io/etcd/releases/download/v{version}/etcd-v{version}-linux-amd64.tar.gz",
    "https://github.com/etcd-io/etcd/releases/download/v{version}/etcd-v{version}-windows-amd64.zip",
]

[[softwares]]
name = "consul"
repo = "hashicorp/consul"
url = "https://www.consul.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://releases.hashicorp.com/consul/{version}/consul_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/consul/{version}/consul_{version}_windows_amd64.zip",
]

[[softwares]]
name = "vagrant"
repo = "hashicorp/vagrant"
url = "https://www.vagrantup.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://releases.hashicorp.com/vagrant/{version}/vagrant-{version}-1.x86_64.rpm",
    "https://releases.hashicorp.com/vagrant/{version}/vagrant_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/vagrant/{version}/vagrant_{version}_windows_amd64.msi",
]

[[softwares]]
name = "vault"
repo = "hashicorp/vault"
url = "https://www.vaultproject.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://releases.hashicorp.com/vault/{version}/vault_{version}_linux_amd64.zip",
    "https://releases.hashicorp.com/vault/{version}/vault_{version}_windows_amd64.zip",
]

[[softwares]]
name = "netdata"
repo = "netdata/netdata"
url = "https://www.netdata.cloud/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/netdata/netdata/releases/download/v{version}/netdata-x86_64-v{version}.gz.run",
]

[[softwares]]
name = "elasticsearch"
repo = "elastic/elasticsearch"
url = "https://www.elastic.co/elasticsearch"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-amd64.deb",
]

[[softwares]]
name = "logstash"
repo = "elastic/logstash"
url = "https://www.elastic.co/logstash"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/logstash/logstash-oss-{version}-x86_64.rpm",
]

[[softwares]]
name = "kibana"
repo = "elastic/kibana"
url = "https://www.elastic.co/kibana"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-windows-x86_64.zip",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/kibana/kibana-oss-{version}-amd64.deb",
]

[[softwares]]
name = "beats"
repo = "elastic/beats"
url = "https://www.elastic.co/beats"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-amd64.deb",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-x86_64.rpm",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-linux-x86_64.tar.gz",
    "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-oss-{version}-windows-x86_64.zip",
]

[[softwares]]
name = "opensearch"
repo = "opensearch-project/OpenSearch"
url = "https://opensearch.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.tar.gz",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-windows-x64.zip",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.rpm",
    "https://artifacts.opensearch.org/releases/bundle/opensearch/{version}/opensearch-{version}-linux-x64.deb",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.tar.gz",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-windows-x64.zip",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.deb",
    "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/{version}/opensearch-dashboards-{version}-linux-x64.rpm",
]

[[softwares]]
name = "manticoresearch"
repo = "manticoresoftware/manticoresearch"
url = "https://github.com/manticoresoftware/manticoresearch"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/manticoresoftware/manticoresearch/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "gradle"
repo = "gradle/gradle"
url = "https://gradle.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_dynamic = true

[[softwares]]
name = "memcached"
repo = "memcached/memcached"
url = "https://memcached.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://www.memcached.org/files/memcached-{version}.tar.gz",
]

[[softwares]]
name = "caddy"
repo = "caddyserver/caddy"
url = "https://caddyserver.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/caddyserver/caddy/releases/download/v2.7.5/caddy_2.7.5_linux_amd64.tar.gz",
    "https://github.com/caddyserver/caddy/releases/download/v2.7.5/caddy_2.7.5_windows_amd64.zip",
]

[[softwares]]
name = "msys2"
repo = "msys2/msys2-installer"
url = "https://www.msys2.org/"
pattern = "^(?P<version>(?P<major>(?P<year>\\d+))-(?P<minor>(?P<month>\\d+))-(?P<patch>(?P<day>\\d+)))$"
release = true
download_urls = [
    "https://github.com/msys2/msys2-installer/releases/download/{year}-{month}-{day}/msys2-x86_64-{year}{month}{day}.exe",
]

[[softwares]]
name = "prometheus"
repo = "prometheus/prometheus"
url = "https://prometheus.io/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/prometheus/prometheus/releases/download/v{version}/prometheus-{version}.linux-amd64.tar.gz",
    "https://github.com/prometheus/prometheus/releases/download/v{version}/prometheus-{version}.windows-amd64.zip",
    "https://github.com/prometheus/prometheus/releases/download/v{version}/prometheus-web-ui-{version}.tar.gz",
]

[[softwares]]
name = "pushgateway"
repo = "prometheus/pushgateway"
url = "https://prometheus.io/docs/practices/pushing/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/prometheus/pushgateway/releases/download/v{version}/pushgateway-{version}.linux-amd64.tar.gz",
    "https://github.com/prometheus/pushgateway/releases/download/v{version}/pushgateway-{version}.windows-amd64.zip",
]

[[softwares]]
name = "alertmanager"
repo = "prometheus/alertmanager"
url = "https://github.com/prometheus/alertmanager"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/prometheus/alertmanager/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/prometheus/alertmanager/releases/download/v{version}/alertmanager-{version}.linux-amd64.tar.gz",
    "https://github.com/prometheus/alertmanager/releases/download/v{version}/alertmanager-{version}.windows-amd64.zip",
]

[[softwares]]
name = "helm"
repo = "helm/helm"
url = "https://helm.sh/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://get.helm.sh/helm-v{version}-linux-amd64.tar.gz",
    "https://get.helm.sh/helm-v{version}-darwin-amd64.tar.gz",
    "https://get.helm.sh/helm-v{version}-darwin-arm64.tar.gz",
    "https://get.helm.sh/helm-v{version}-linux-arm64.tar.gz",
    "https://get.helm.sh/helm-v{version}-windows-amd64.zip",
]

[[softwares]]
name = "haproxy"
repo = "haproxy/haproxy"
url = "https://www.haproxy.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "haproxy"
split = 2
download_urls = [
    "https://www.haproxy.org/download/{major}.{minor}/src/haproxy-{version}.tar.gz",
]

[[softwares]]
name = "flume"
parser = "apache-flume"
url = "https://flume.apache.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://dlcdn.apache.org/flume/{version}/apache-flume-{version}-src.tar.gz",
    "https://dlcdn.apache.org/flume/{version}/apache-flume-{version}-bin.tar.gz",
]

[[softwares]]
name = "ant"
repo = "apache/ant"
url = "https://ant.apache.org/"
pattern = "^rel/(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://archive.apache.org/dist/ant/binaries/apache-ant-{version}-bin.zip",
    "https://archive.apache.org/dist/ant/source/apache-ant-{version}-src.tar.gz",
]

[[softwares]]
name = "srs"
repo = "ossrs/srs"
url = "https://github.com/ossrs/srs"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?-r\\d+)$"
release = true
download_urls = [
    "https://github.com/ossrs/srs/releases/download/v{version}/srs-server-{version}.tar.gz",
    "https://github.com/ossrs/srs/releases/download/v{version}/SRS-Windows-x86_64-{version}-setup.exe",
]

[[softwares]]
name = "clash-verge-rev"
repo = "clash-verge-rev/clash-verge-rev"
url = "https://github.com/clash-verge-rev/clash-verge-rev"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/clash-verge-rev/clash-verge-rev/releases/download/v{version}/Clash.Verge_{version}_amd64.deb",
    "https://github.com/clash-verge-rev/clash-verge-rev/releases/download/v{version}/Clash.Verge_{version}_x64-setup.exe",
    "https://github.com/clash-verge-rev/clash-verge-rev/releases/download/v{version}/Clash.Verge_{version}_x64.dmg",
    "https://github.com/clash-verge-rev/clash-verge-rev/releases/download/v{version}/Clash.Verge_x64.app.tar.gz#Clash.Verge_x64_v{version}.app.tar.gz",
    "https://github.com/clash-verge-rev/clash-verge-rev/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "rathole"
repo = "rapiz1/rathole"
url = "https://github.com/rapiz1/rathole"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rapiz1/rathole/releases/download/v{version}/rathole-x86_64-pc-windows-msvc.zip#rathole-v{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/rapiz1/rathole/releases/download/v{version}/rathole-x86_64-unknown-linux-gnu.zip#rathole-v{version}-x86_64-unknown-linux-gnu.zip",
    "https://github.com/rapiz1/rathole/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "code-server"
repo = "coder/code-server"
url = "https://github.com/coder/code-server"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/coder/code-server/releases/download/v{version}/code-server-{version}-amd64.rpm",
    "https://github.com/coder/code-server/releases/download/v{version}/code-server_{version}_amd64.deb",
    "https://github.com/coder/code-server/releases/download/v{version}/code-server-{version}-linux-amd64.tar.gz",
]

[[softwares]]
name = "vscode"
repo = "microsoft/vscode"
url = "https://code.visualstudio.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://update.code.visualstudio.com/{version}/win32-x64/stable",
]

[[softwares]]
name = "awscli"
repo = "aws/aws-cli"
url = "https://docs.aws.amazon.com/cli/latest/userguide/getting-started-version.html"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-{version}.zip",
    "https://awscli.amazonaws.com/AWSCLIV2-{version}.msi",
]

[[softwares]]
name = "dotnetfx"
url = "https://dotnet.microsoft.com/en-us/download/dotnet-framework"
pattern = "^\\.NET Framework (?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?)$"
parser = "dotnetfx"
download_urls = [
    "https://dotnet.microsoft.com/en-us/download/dotnet-framework/thank-you/net{major}{minor}{patch}-developer-pack-offline-installer",
    "https://dotnet.microsoft.com/en-us/download/dotnet-framework/thank-you/net{major}{minor}{patch}-offline-installer",
]

[[softwares]]
name = "dotnet"
url = "https://dotnet.microsoft.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "dotnet"

[[softwares]]
name = "sublime"
url = "https://www.sublimetext.com/"
pattern = "^Version: Build (?P<version>(?P<major>\\d+))$"
parser = "sublime"
download_urls = [
    "https://download.sublimetext.com/sublime_text_build_{version}_x64_setup.exe",
    "https://download.sublimetext.com/sublime_text_build_{version}_x64.zip",
]

[[softwares]]
name = "xshell"
url = "https://www.netsarang.com/en/xshell/"
pattern = "^Xshell (?P<version>(?P<major>\\d+) Build (?P<build>\\d+))(?:.+)$"
parser = "xshell"
download_urls = [
    "https://cdn.netsarang.net/v{major}/Xshell-latest-p",
    "https://cdn.netsarang.net/v{major}/Xftp-latest-p",
]

[[softwares]]
name = "Office-Tool"
repo = "YerongAI/Office-Tool"
url = "https://github.com/YerongAI/Office-Tool"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
release = true
download_urls = [
    "https://github.com/YerongAI/Office-Tool/releases/download/v{version}/Office_Tool_with_runtime_v{version}_x64.zip",
]

[[softwares]]
name = "tabby"
repo = "Eugeny/tabby"
url = "https://github.com/Eugeny/tabby"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/Eugeny/tabby/releases/download/v{version}/tabby-{version}-linux-x64.deb",
    "https://github.com/Eugeny/tabby/releases/download/v{version}/tabby-{version}-linux-x64.rpm",
    "https://github.com/Eugeny/tabby/releases/download/v{version}/tabby-{version}-linux-x64.tar.gz",
    "https://github.com/Eugeny/tabby/releases/download/v{version}/tabby-{version}-portable-x64.zip",
    "https://github.com/Eugeny/tabby/releases/download/v{version}/tabby-{version}-setup-x64.exe",
    "https://github.com/Eugeny/tabby/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "virtualbox"
url = "https://www.virtualbox.org/wiki/Downloads"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "virtualbox"

[[softwares]]
name = "flutter"
url = "https://flutter.dev/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "flutter"
download_urls = [
    "https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_{version}-stable.zip",
]

[[softwares]]
name = "dart"
url = "https://dart.dev/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "dart"
download_urls = [
    "https://storage.googleapis.com/dart-archive/channels/stable/release/{version}/sdk/dartsdk-windows-x64-release.zip#dartsdk-{version}-windows-x64-release.zip",
    "https://storage.googleapis.com/dart-archive/channels/stable/release/{version}/api-docs/dartdocs-gen-api.zip#dartdocs-{version}-gen-api.zip",
]

[[softwares]]
name = "android-studio"
url = "https://developer.android.com/studio"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
parser = "android-studio"
download_urls = [
    "https://redirector.gvt1.com/edgedl/android/studio/install/{version}/android-studio-{version}-windows.exe",
]

[[softwares]]
name = "AutoHotkey"
repo = "AutoHotkey/AutoHotkey"
url = "https://github.com/AutoHotkey/AutoHotkey"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/AutoHotkey/AutoHotkey/releases/download/v{version}/AutoHotkey_{version}.zip",
    "https://github.com/AutoHotkey/AutoHotkey/releases/download/v{version}/AutoHotkey_{version}_setup.exe",
    "https://github.com/AutoHotkey/AutoHotkey/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "chrome"
url = "https://www.google.com/chrome/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
parser = "chrome"
download_urls = []

[[softwares]]
name = "firefox"
url = "https://www.mozilla.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
parser = "firefox"
download_urls = [
    "https://download-installer.cdn.mozilla.net/pub/firefox/releases/{version}/win64/zh-CN/Firefox%20Setup%20{version}.exe",
]

[[softwares]]
name = "gh"
repo = "cli/cli"
url = "https://cli.github.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/cli/cli/releases/download/v{version}/gh_{version}_linux_amd64.rpm",
    "https://github.com/cli/cli/releases/download/v{version}/gh_{version}_linux_amd64.tar.gz",
    "https://github.com/cli/cli/releases/download/v{version}/gh_{version}_windows_amd64.zip",
]

[[softwares]]
name = "github-desktop"
url = "https://desktop.github.com/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "github-desktop"
download_urls = [
    "https://central.github.com/deployments/desktop/desktop/latest/win32#GitHubDesktopSetup-x64-{version}.exe",
]

[[softwares]]
name = "jetbrains"
url = "https://www.jetbrains.com/"
pattern = "^(?P<version>(?P<major>\\d{4})\\.(?P<minor>\\d)\\.(?P<patch>\\d))$"
parser = "jetbrains"
code = ["AC", "CL", "RSU", "DG", "GO", "IIU", "PS", "PCP", "RD", "RM", "WS", "FL", "RR", "DS", "TC", "WRS"]
os = ["windows"]

[[softwares]]
name = "libgd"
repo = "libgd/libgd"
url = "https://www.libgd.org/"
pattern = "^gd-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libgd/libgd/releases/download/gd-{version}/libgd-{version}.tar.gz",
    "https://github.com/libgd/libgd/archive/refs/tags/gd-{version}.tar.gz",
]

[[softwares]]
name = "libdatrie"
repo = "tlwg/libdatrie"
url = "https://github.com/tlwg/libdatrie"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/tlwg/libdatrie/releases/download/v{version}/libdatrie-{version}.tar.xz",
    "https://github.com/tlwg/libdatrie/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libvips"
repo = "libvips/libvips"
url = "https://github.com/libvips/libvips"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libvips/libvips/releases/download/v{version}/vips-{version}.tar.xz",
    "https://github.com/libvips/libvips/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libzip"
repo = "nih-at/libzip"
url = "https://libzip.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/nih-at/libzip/releases/download/v{version}/libzip-{version}.tar.gz",
]

[[softwares]]
name = "re2c"
repo = "skvadrik/re2c"
url = "https://re2c.org/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?)$"
release = true
download_urls = [
    "https://github.com/skvadrik/re2c/releases/download/{version}/re2c-{version}.tar.xz",
    "https://github.com/skvadrik/re2c/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "r-nacos"
repo = "nacos-group/r-nacos"
url = "https://github.com/nacos-group/r-nacos"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/nacos-group/r-nacos/releases/download/v{version}/rnacos-x86_64-pc-windows-msvc-v{version}.zip",
    "https://github.com/nacos-group/r-nacos/releases/download/v{version}/rnacos-x86_64-unknown-linux-musl-v{version}.tar.gz",
    "https://github.com/nacos-group/r-nacos/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libwebp"
repo = "webmproject/libwebp"
url = "https://www.webmproject.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/webmproject/libwebp/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libpng"
repo = "pnggroup/libpng"
url = "http://www.libpng.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/pnggroup/libpng/archive/refs/tags/v{version}.tar.gz",
]
max_page = 2

[[softwares]]
name = "ImageMagick"
repo = "ImageMagick/ImageMagick"
url = "https://github.com/ImageMagick/ImageMagick"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(-(?P<build>\\d+))?)$"
release = true
download_urls = [
    "https://github.com/ImageMagick/ImageMagick/releases/download/{version}/ImageMagick.Q16-HDRI.msixbundle#ImageMagick-{version}.Q16-HDRI.msixbundle",
    "https://github.com/ImageMagick/ImageMagick/releases/download/{version}/ImageMagick.Q16.msixbundle#ImageMagick-{version}.Q16.msixbundle",
    "https://github.com/ImageMagick/ImageMagick/releases/download/{version}/ImageMagick.Q8.msixbundle#ImageMagick-{version}.Q8.msixbundle",
    "https://github.com/ImageMagick/ImageMagick/archive/refs/tags/{version}.tar.gz",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-Q8-x64-static.exe",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-Q16-HDRI-x64-static.exe",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-Q16-x64-static.exe",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-portable-Q8-x64.zip",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-portable-Q16-HDRI-x64.zip",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-portable-Q16-x64.zip",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-Q8-x64-dll.exe",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-Q16-HDRI-x64-dll.exe",
    "https://imagemagick.org/archive/binaries/ImageMagick-{version}-Q16-x64-dll.exe",
    "https://imagemagick.org/archive/binaries/magick#ImageMagick-{version}-linux-amd64",
    "https://imagemagick.org/archive/linux/CentOS/x86_64/ImageMagick-{version}.x86_64.rpm",
    "https://imagemagick.org/archive/linux/CentOS/x86_64/ImageMagick-libs-{version}.x86_64.rpm",
]

[[softwares]]
name = "createrepo_c"
repo = "rpm-software-management/createrepo_c"
url = "https://github.com/rpm-software-management/createrepo_c"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rpm-software-management/createrepo_c/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "libgit2"
repo = "libgit2/libgit2"
url = "https://libgit2.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/libgit2/libgit2/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "handlebars.c"
repo = "jbboehr/handlebars.c"
url = "https://github.com/jbboehr/handlebars.c"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/jbboehr/handlebars.c/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "ip2proxy-c"
repo = "ip2location/ip2proxy-c"
url = "https://github.com/ip2location/ip2proxy-c"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ip2location/ip2proxy-c/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "libbase58"
repo = "bitcoin/libbase58"
url = "https://github.com/bitcoin/libbase58"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/bitcoin/libbase58/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "librdkafka"
repo = "confluentinc/librdkafka"
url = "https://github.com/confluentinc/librdkafka"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/confluentinc/librdkafka/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libxdiff"
repo = "opencor/libxdiff"
url = "https://github.com/opencor/libxdiff"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?)$"
release = true
download_urls = [
    "https://github.com/opencor/libxdiff/releases/download/v{version}/LibXDiff.{version}.linux.tar.gz",
    "https://github.com/opencor/libxdiff/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "utf8proc"
repo = "JuliaStrings/utf8proc"
url = "https://github.com/JuliaStrings/utf8proc"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/JuliaStrings/utf8proc/releases/download/v{version}/utf8proc-{version}.tar.gz",
]

[[softwares]]
name = "juicefs"
repo = "juicedata/juicefs"
url = "https://juicefs.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/juicedata/juicefs/releases/download/v{version}/juicefs-{version}-linux-amd64.tar.gz",
    "https://github.com/juicedata/juicefs/releases/download/v{version}/juicefs-{version}-windows-amd64.tar.gz",
    "https://github.com/juicedata/juicefs/releases/download/v{version}/juicefs-hadoop-{version}.jar",
    "https://github.com/juicedata/juicefs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "aliyun-ossfs"
repo = "aliyun/ossfs"
url = "https://github.com/aliyun/ossfs"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/aliyun/ossfs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "cosfs"
repo = "tencentyun/cosfs"
url = "https://github.com/tencentyun/cosfs"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/tencentyun/cosfs/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "s3fs-fuse"
repo = "s3fs-fuse/s3fs-fuse"
url = "https://github.com/s3fs-fuse/s3fs-fuse"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/s3fs-fuse/s3fs-fuse/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "wget2"
repo = "rockdaboot/wget2"
url = "https://github.com/rockdaboot/wget2"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/rockdaboot/wget2/releases/download/v{version}/wget2-{version}.tar.gz",
    "https://github.com/rockdaboot/wget2/releases/download/v{version}/wget2.exe#wget2-{version}.exe",
]

[[softwares]]
name = "aria2"
repo = "aria2/aria2"
url = "https://aria2.github.io/"
pattern = "^release-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
assets = true

[[softwares]]
name = "rsync"
repo = "WayneD/rsync"
url = "https://rsync.samba.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/RsyncProject/rsync/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "syncthing"
repo = "syncthing/syncthing"
url = "https://github.com/syncthing/syncthing"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/syncthing/syncthing/releases/download/v{version}/syncthing-linux-amd64-v{version}.tar.gz",
    "https://github.com/syncthing/syncthing/releases/download/v{version}/syncthing-windows-amd64-v{version}.zip",
    "https://github.com/syncthing/syncthing/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "rclone"
repo = "rclone/rclone"
url = "https://rclone.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-linux-amd64.rpm",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-linux-amd64.deb",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-linux-amd64.zip",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}-windows-amd64.zip",
    "https://github.com/rclone/rclone/releases/download/v{version}/rclone-v{version}.tar.gz",
]

[[softwares]]
name = "minio"
repo = "minio/minio"
url = "https://min.io/"
pattern = "^(?P<version>RELEASE.(?P<major>\\d{4})-(?P<minor>\\d{2})-(?P<patch>\\d{2})T\\d{2}-\\d{2}-\\d{2}Z)$"
release = true
download_urls = [
    "https://dl.min.io/server/minio/release/linux-amd64/minio.{version}",
]

[[softwares]]
name = "mc"
repo = "minio/mc"
url = "https://min.io/"
pattern = "^(?P<version>RELEASE.(?P<major>\\d{4})-(?P<minor>\\d{2})-(?P<patch>\\d{2})T\\d{2}-\\d{2}-\\d{2}Z)$"
release = true
download_urls = [
    "https://dl.min.io/client/mc/release/linux-amd64/mc.{version}",
]

[[softwares]]
name = "byconity"
repo = "ByConity/ByConity"
url = "https://byconity.github.io/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-client-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-client-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-common-static-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-common-static-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-daemon-manager-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-daemon-manager-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-resource-manager-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-resource-manager-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-server-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-server-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-tso-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-tso-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-{version}.x86_64.rpm",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-write-{version}-amd64.tgz",
    "https://github.com/ByConity/ByConity/releases/download/{version}/byconity-worker-write-{version}.x86_64.rpm",
]

[[softwares]]
name = "bind9"
url = "https://www.isc.org/bind/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "gitlab"
host = "gitlab.isc.org"
id = 1
download_urls = [
    "https://downloads.isc.org/isc/bind9/{version}/BIND{version}.x64.zip",
    "https://downloads.isc.org/isc/bind9/{version}/bind-{version}.tar.xz",
]

[[softwares]]
name = "TortoiseGit"
id = 384627
url = "https://tortoisegit.org/"
pattern = "^REL_(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))_EXTERNAL$"
parser = "gitlab"
by_tag_name = true
download_urls = [
    "https://download.tortoisegit.org/tgit/{version}/TortoiseGit-{version}-64bit.msi",
    "https://download.tortoisegit.org/tgit/{version}/TortoiseGit-LanguagePack-{version}-64bit-zh_CN.msi",
]

[[softwares]]
name = "TortoiseSVN"
url = "https://tortoisesvn.net/"
pattern = "^TortoiseSVN-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))-x64-svn-(?P<other>[.\\d]+).msi$"
parser = "sf"
project = "tortoisesvn"
download_urls = [
    "https://sourceforge.net/projects/tortoisesvn/files/{major}.{minor}.{patch}/Application/TortoiseSVN-{version}-x64-svn-{other}.msi/download#TortoiseSVN-{version}-x64-svn-{other}.msi",
    "https://sourceforge.net/projects/tortoisesvn/files/{major}.{minor}.{patch}/Language%20Packs/LanguagePack_{version}-x64-zh_CN.msi/download#LanguagePack_{version}-x64-zh_CN.msi",
]

[[softwares]]
name = "7-zip"
url = "https://www.7-zip.org/"
pattern = "^7z(?P<version>(?P<major>\\d{2})(?P<minor>\\d{2}))-x64.exe$"
parser = "sf"
project = "sevenzip"
download_urls = [
    "https://www.7-zip.org/a/7z{version}-x64.exe",
    "https://www.7-zip.org/a/7z{version}-extra.7z",
    "https://7-zip.org/a/7z{version}-linux-x64.tar.xz",
]

[[softwares]]
name = "rocksdb"
repo = "facebook/rocksdb"
url = "http://rocksdb.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/facebook/rocksdb/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "zstd"
repo = "facebook/zstd"
url = "https://github.com/facebook/zstd"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/facebook/zstd/releases/download/v{version}/zstd-v{version}-win64.zip",
    "https://github.com/facebook/zstd/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "python-build-standalone"
repo = "astral-sh/python-build-standalone"
url = "https://github.com/astral-sh/python-build-standalone"
pattern = "^(?P<version>(?P<major>\\d{4})(?P<minor>\\d{2})(?P<patch>\\d{2}))$"
release = true
assets = true
assets_patterns = [
    "^cpython-(3\\.1[0-3]\\.\\d+)(?:.+)\\d{8}-x86_64_v[2-3]-unknown-linux-gnu-pgo(?:.+)lto-full\\.tar\\.zst$",
    "^cpython-(3\\.1[0-3]\\.\\d+)(?:.+)\\d{8}-x86_64_v4-unknown-linux-gnu-lto-full\\.tar\\.zst$",
    "^cpython-(3\\.1[0-3]\\.\\d+)(?:.+)\\d{8}-x86_64-unknown-linux-gnu-pgo(?:.+)lto-full\\.tar\\.zst$",
    "^cpython-(3\\.1[0-3]\\.\\d+)(?:.+)\\d{8}-x86_64-pc-windows-msvc-pgo-full\\.tar\\.zst$",
]
download_urls = [
    "https://github.com/astral-sh/python-build-standalone/archive/refs/tags/{raw_str}.tar.gz",
]
page_size = 5

[[softwares]]
name = "frp"
repo = "fatedier/frp"
url = "https://gofrp.org/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/fatedier/frp/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/fatedier/frp/releases/download/v{version}/frp_{version}_linux_amd64.tar.gz",
    "https://github.com/fatedier/frp/releases/download/v{version}/frp_{version}_windows_amd64.zip",
]

[[softwares]]
name = "nodepass"
repo = "yosebyte/nodepass"
url = "https://github.com/yosebyte/nodepass"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/yosebyte/nodepass/releases/download/v{version}/nodepass_{version}_linux_amd64.tar.gz",
    "https://github.com/yosebyte/nodepass/releases/download/v{version}/nodepass_{version}_windows_amd64.zip",
    "https://github.com/yosebyte/nodepass/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "vtracer"
repo = "visioncortex/vtracer"
url = "https://www.visioncortex.org/vtracer/"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/visioncortex/vtracer/archive/refs/tags/{version}.tar.gz",
    "https://github.com/visioncortex/vtracer/releases/download/{version}/vtracer-x86_64-pc-windows-msvc.zip#vtracer-{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/visioncortex/vtracer/releases/download/{version}/vtracer-x86_64-unknown-linux-musl.tar.gz#vtracer-{version}-x86_64-unknown-linux-musl.tar.gz",
]

[[softwares]]
name = "meilisearch"
repo = "meilisearch/meilisearch"
url = "https://www.meilisearch.com/"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/meilisearch/meilisearch/archive/refs/tags/v{version}.tar.gz",
    "https://github.com/meilisearch/meilisearch/releases/download/v{version}/meilisearch-linux-amd64#meilisearch-linux-amd64-v{version}",
    "https://github.com/meilisearch/meilisearch/releases/download/v{version}/meilisearch-windows-amd64.exe#meilisearch-windows-amd64-v{version}.exe",
]

[[softwares]]
name = "sigma"
repo = "go-sigma/sigma"
url = "https://github.com/go-sigma/sigma"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/go-sigma/sigma/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "antlr"
repo = "antlr/antlr4"
url = "https://github.com/antlr/antlr4"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://www.antlr.org/download/antlr-{version}-complete.jar",
]

[[softwares]]
name = "garnet"
repo = "microsoft/garnet"
url = "https://github.com/microsoft/garnet"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/microsoft/garnet/releases/download/v{version}/linux-x64-based.tar.xz#v{version}-linux-x64-based.tar.xz",
    "https://github.com/microsoft/garnet/releases/download/v{version}/portable.7z#v{version}-portable.7z",
    "https://github.com/microsoft/garnet/releases/download/v{version}/win-x64-based-readytorun.zip#v{version}-win-x64-based-readytorun.zip",
    "https://github.com/microsoft/garnet/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "HEU_KMS_Activator"
repo = "zbezj/HEU_KMS_Activator"
url = "https://github.com/zbezj/HEU_KMS_Activator"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/zbezj/HEU_KMS_Activator/releases/download/{version}/HEU_KMS_Activator_v{version}.rar#HEU_KMS_Activator_v{version}.rar",
    "https://github.com/zbezj/HEU_KMS_Activator/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "mailrelay"
repo = "wiggin77/mailrelay"
url = "https://github.com/wiggin77/mailrelay"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/wiggin77/mailrelay/releases/download/{raw_str}/mailrelay-linux-amd64#mailrelay-{raw_str}-linux-amd64",
    "https://github.com/wiggin77/mailrelay/releases/download/{raw_str}/mailrelay-windows-amd64.exe#mailrelay-{raw_str}-windows-amd64.exe",
    "https://github.com/wiggin77/mailrelay/archive/refs/tags/{raw_str}.tar.gz",
]

[[softwares]]
name = "linux-pam"
repo = "linux-pam/linux-pam"
url = "https://github.com/linux-pam/linux-pam"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/linux-pam/linux-pam/releases/download/v{version}/Linux-PAM-{version}-docs.tar.xz",
    "https://github.com/linux-pam/linux-pam/releases/download/v{version}/Linux-PAM-{version}.tar.xz",
    "https://github.com/linux-pam/linux-pam/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libcap-ng"
repo = "stevegrubb/libcap-ng"
url = "https://github.com/stevegrubb/libcap-ng"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/stevegrubb/libcap-ng/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "pkcs11-helper"
repo = "OpenSC/pkcs11-helper"
url = "https://github.com/OpenSC/pkcs11-helper"
pattern = "^pkcs11-helper-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/OpenSC/pkcs11-helper/releases/download/pkcs11-helper-{version}/pkcs11-helper-{version}.tar.bz2",
    "https://github.com/OpenSC/pkcs11-helper/archive/refs/tags/pkcs11-helper-{version}.tar.gz",
]

[[softwares]]
name = "openvpn"
repo = "OpenVPN/openvpn"
url = "https://github.com/OpenVPN/openvpn"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/OpenVPN/openvpn/releases/download/v{version}/openvpn-{version}.tar.gz",
    "https://swupdate.openvpn.org/community/releases/OpenVPN-{version}-I001-amd64.msi",
]

[[softwares]]
name = "openvpn3"
repo = "OpenVPN/openvpn3"
url = "https://github.com/OpenVPN/openvpn3"
pattern = "^release/(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
download_urls = [
    "https://github.com/OpenVPN/openvpn3/archive/refs/tags/release/{version}.tar.gz",
]

[[softwares]]
name = "easy-rsa"
repo = "OpenVPN/easy-rsa"
url = "https://github.com/OpenVPN/easy-rsa"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/OpenVPN/easy-rsa/releases/download/v{version}/EasyRSA-{version}-win64.zip",
    "https://github.com/OpenVPN/easy-rsa/releases/download/v{version}/EasyRSA-{version}.tgz",
    "https://github.com/OpenVPN/easy-rsa/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "pcre2"
repo = "PCRE2Project/pcre2"
url = "https://github.com/PCRE2Project/pcre2"
pattern = "^pcre2-(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)(?P<patch>\\.\\d+)?)$"
release = true
download_urls = [
    "https://github.com/PCRE2Project/pcre2/releases/download/pcre2-{version}/pcre2-{version}.tar.gz",
]

[[softwares]]
name = "zlib"
repo = "madler/zlib"
url = "https://github.com/madler/zlib"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
release = true
download_urls = [
    "https://github.com/madler/zlib/releases/download/v{version}/zlib-{version}.tar.gz",
]

[[softwares]]
name = "libpsl"
repo = "rockdaboot/libpsl"
url = "https://github.com/rockdaboot/libpsl"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/rockdaboot/libpsl/releases/download/{version}/libpsl-{version}.tar.gz",
    "https://github.com/rockdaboot/libpsl/releases/download/{version}/libpsl-{version}.tar.lz",
]

[[softwares]]
name = "ffmpeg"
repo = "FFmpeg/FFmpeg"
url = "https://github.com/FFmpeg/FFmpeg"
pattern = "^n(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.?(?P<patch>\\d+)?)$"
split = 2
condition = 'major >= 6'
download_urls = [
    "https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz#linux|ffmpeg-release-amd64-static.tar.xz",
    "https://www.gyan.dev/ffmpeg/builds/packages/ffmpeg-{version}-full_build.7z#win64|ffmpeg-{version}-full_build.7z",
    "https://www.johnvansickle.com/ffmpeg/old-releases/ffmpeg-{version}-amd64-static.tar.xz#linux|ffmpeg-{version}-amd64-static.tar.xz",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-linux64-gpl-{major}.{minor}.tar.xz",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-linux64-lgpl-{major}.{minor}.tar.xz",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-linux64-gpl-shared-{major}.{minor}.tar.xz",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-linux64-lgpl-shared-{major}.{minor}.tar.xz",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-win64-gpl-{major}.{minor}.zip",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-win64-gpl-shared-{major}.{minor}.zip",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-win64-lgpl-{major}.{minor}.zip",
    "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n{major}.{minor}-latest-win64-lgpl-shared-{major}.{minor}.zip",
]

[[softwares]]
repo = "library/almalinux"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
parser = "docker-hub"
split = 1

[[softwares]]
repo = "library/alpine"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "library/amazoncorretto"
pattern = "^(?P<version>(?P<major>(17|21))\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"
split = 1

[[softwares]]
repo = "library/caddy"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/composer"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "library/fluentd"
pattern = "^(?P<version>v(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?(?P<other>-[\\d+.]+)?)$"
parser = "docker-hub"

[[softwares]]
repo = "library/golang"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/maven"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-amazoncorretto-(8|11|17|21))?$"
parser = "docker-hub"

[[softwares]]
repo = "library/gradle"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-jdk(17|21)-alpine)?$"
parser = "docker-hub"
max_page = 3

[[softwares]]
repo = "library/httpd"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/influxdb"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/mongo"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "library/mysql"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 2

[[softwares]]
repo = "library/mariadb"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "library/postgres"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/rabbitmq"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-(alpine|management|management-alpine))?$"
parser = "docker-hub"

[[softwares]]
repo = "library/nats"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/nginx"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"
fixed_tags = ["stable", "stable-alpine"]

[[softwares]]
repo = "library/node"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"
split = 1
fixed_tags = ["lts", "lts-alpine"]

[[softwares]]
repo = "library/php"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-(alpine|apache|cli|cli-alpine|fpm|fpm-alpine|zts|zts-alpine))?$"
parser = "docker-hub"
fixed_tags = ["zts", "zts-alpine"]
max_page = 5

[[softwares]]
repo = "library/python"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-(alpine|slim))?$"
parser = "docker-hub"

[[softwares]]
repo = "library/redis"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/registry"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "library/rockylinux"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+))$"
parser = "docker-hub"
split = 1

[[softwares]]
repo = "library/zookeeper"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-jre-[\\d]+)?$"
parser = "docker-hub"

[[softwares]]
repo = "library/aerospike"
pattern = "^(?P<version>ce-(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "library/solr"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "elastic/elasticsearch"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 1

[[softwares]]
repo = "elastic/kibana"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 1

[[softwares]]
repo = "elastic/logstash"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 1

[[softwares]]
repo = "gitea/gitea"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-rootless)?$"
parser = "docker-hub"

[[softwares]]
repo = "valkey/valkey"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/consul"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/terraform"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/vault"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/packer"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/nomad"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/boundary"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "hashicorp/waypoint"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "timescale/timescaledb"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-pg1[56](-bitnami|-oss|-repmgr-bitnami)?)$"
parser = "docker-hub"

[[softwares]]
repo = "pypiserver/pypiserver"
pattern = "^(?P<version>v(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-alpine)?$"
parser = "docker-hub"

[[softwares]]
repo = "fluent/fluentd"
pattern = "^(?P<version>v(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-[\\d.]+)?$"
parser = "docker-hub"

[[softwares]]
repo = "fluent/fluent-bit"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "percona/percona-server"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 2

[[softwares]]
repo = "percona/percona-xtrabackup"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 2

[[softwares]]
repo = "grafana/grafana"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "grafana/grafana-oss"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "sonatype/nexus3"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-java(8|11|17))?$"
parser = "docker-hub"

[[softwares]]
repo = "jenkins/jenkins"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-lts-jdk17)?$"
parser = "docker-hub"

[[softwares]]
repo = "apachepulsar/pulsar-all"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "v2fly/v2fly-core"
pattern = "^(?P<version>v(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "apache/apisix"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-(redhat|debian))?$"
parser = "docker-hub"

[[softwares]]
repo = "apache/apisix-dashboard"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-(alpine|centos))?$"
parser = "docker-hub"

[[softwares]]
repo = "apache/kafka"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "drone/drone"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "ollama/ollama"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))(?P<other>-rocm)?$"
parser = "docker-hub"

[[softwares]]
repo = "nsqio/nsq"
pattern = "^(?P<version>v(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "opensearchproject/opensearch-dashboards"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "opensearchproject/opensearch"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "opensearchproject/opensearch-operator"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "opensearchproject/data-prepper"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "bitnami/kafka"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"
split = 2

[[softwares]]
repo = "stilleshan/frps"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "stilleshan/frpc"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "ossrs/srs"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)-r(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "manticoresearch/manticore"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
repo = "getmeili/meilisearch"
pattern = "^(?P<version>v(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
parser = "docker-hub"

[[softwares]]
name = "osquery"
repo = "osquery/osquery"
url = "https://github.com/osquery/osquery"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/osquery/osquery/releases/download/{version}/osquery-{version}-1.linux.x86_64.rpm",
    "https://github.com/osquery/osquery/releases/download/{version}/osquery-{version}.msi",
    "https://github.com/osquery/osquery/releases/download/{version}/osquery-{version}.windows_x86_64.zip",
    "https://github.com/osquery/osquery/releases/download/{version}/osquery-{version}_1.linux_x86_64.tar.gz",
    "https://github.com/osquery/osquery/releases/download/{version}/osquery_{version}-1.linux_amd64.deb",
    "https://github.com/osquery/osquery/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "ZeroOmega"
repo = "zero-peak/ZeroOmega"
url = "https://github.com/zero-peak/ZeroOmega"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
release = true
download_urls = [
    "https://github.com/zero-peak/ZeroOmega/releases/download/{version}/zeroomega-{version}.crx",
    "https://github.com/zero-peak/ZeroOmega/releases/download/{version}/zeroomega-{version}.xpi",
    "https://github.com/zero-peak/ZeroOmega/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "uv"
repo = "astral-sh/uv"
url = "https://github.com/astral-sh/uv"
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/astral-sh/uv/releases/download/{version}/uv-x86_64-pc-windows-msvc.zip#uv-{version}-x86_64-pc-windows-msvc.zip",
    "https://github.com/astral-sh/uv/releases/download/{version}/uv-x86_64-unknown-linux-gnu.tar.gz#uv-{version}-x86_64-unknown-linux-gnu.tar.gz",
    "https://github.com/astral-sh/uv/releases/download/{version}/uv-x86_64-unknown-linux-musl.tar.gz#uv-{version}-x86_64-unknown-linux-musl.tar.gz",
    "https://github.com/astral-sh/uv/archive/refs/tags/{version}.tar.gz",
]

[[softwares]]
name = "buf"
repo = "bufbuild/buf"
url = "https://github.com/bufbuild/buf"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/bufbuild/buf/releases/download/v{version}/buf-Linux-x86_64.tar.gz#v{version}|buf-Linux-x86_64.tar.gz",
    "https://github.com/bufbuild/buf/releases/download/v{version}/buf-Windows-x86_64.zip#v{version}|buf-Windows-x86_64.zip",
    "https://github.com/bufbuild/buf/releases/download/v{version}/protoc-gen-buf-breaking-Linux-x86_64#v{version}|protoc-gen-buf-breaking-Linux-x86_64",
    "https://github.com/bufbuild/buf/releases/download/v{version}/protoc-gen-buf-breaking-Windows-x86_64.exe#v{version}|protoc-gen-buf-breaking-Windows-x86_64.exe",
    "https://github.com/bufbuild/buf/releases/download/v{version}/protoc-gen-buf-lint-Linux-x86_64#v{version}|protoc-gen-buf-lint-Linux-x86_64",
    "https://github.com/bufbuild/buf/releases/download/v{version}/protoc-gen-buf-lint-Windows-x86_64.exe#v{version}|protoc-gen-buf-lint-Windows-x86_64.exe",
    "https://github.com/bufbuild/buf/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "libavif"
repo = "AOMediaCodec/libavif"
url = "https://github.com/AOMediaCodec/libavif"
pattern = "^v(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
download_urls = [
    "https://github.com/AOMediaCodec/libavif/releases/download/v{version}/linux-artifacts.zip#libavif-v{version}-linux-artifacts.zip",
    "https://github.com/AOMediaCodec/libavif/releases/download/v{version}/windows-artifacts.zip#libavif-v{version}-windows-artifacts.zip",
    "https://github.com/AOMediaCodec/libavif/archive/refs/tags/v{version}.tar.gz",
]

[[softwares]]
name = "jbp-gemini-code-assist"
parser = "jetbrains-plugin"
plugin_id = 24198
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)-(?P<build>\\d+))$"

[[softwares]]
name = "jbp-string-manipulation"
parser = "jetbrains-plugin"
plugin_id = 2162
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-translation"
parser = "jetbrains-plugin"
plugin_id = 8579
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-tongyi-lingma"
parser = "jetbrains-plugin"
plugin_id = 17809
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-marscode"
parser = "jetbrains-plugin"
plugin_id = 24326
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"

[[softwares]]
name = "jbp-codegeex"
parser = "jetbrains-plugin"
plugin_id = 20587
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)-(?P<build>\\d+))$"

[[softwares]]
name = "jbp-tencent-cloud-ai"
parser = "jetbrains-plugin"
plugin_id = 24379
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-github-copilot"
parser = "jetbrains-plugin"
plugin_id = 17718
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)-(?P<build>\\d+))$"

[[softwares]]
name = "jbp-flutter"
parser = "jetbrains-plugin"
plugin_id = 9212
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-antlr-v4-tool"
parser = "jetbrains-plugin"
plugin_id = 23446
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-json-assistant"
parser = "jetbrains-plugin"
plugin_id = 24738
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"

[[softwares]]
name = "jbp-jetbrains-ai-assistant"
parser = "jetbrains-plugin"
plugin_id = 22282
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)\\.(?P<build>\\d+))$"

[[softwares]]
name = "jbp-jenkins-development-support"
parser = "jetbrains-plugin"
plugin_id = 1885
pattern = "^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+))$"
